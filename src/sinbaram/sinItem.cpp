/*----------------------------------------------------------------------------*
*	���ϸ� :  sinItem.cpp
*	�ϴ��� :  ������ ���� 
*	�ۼ��� :  ����������Ʈ 12�� 
*	������ :  �ڻ� 
*-----------------------------------------------------------------------------*/	

#include "sinLinkHeader.h"
#include "Language\\language.h"

/*----------------------------------------------------------------------------*
*    						���� ���� 	
*-----------------------------------------------------------------------------*/
cITEM cItem;	 

sITEM TempItem;      //��� ����� ������ ����ü ���� 
sITEM MouseItem;	 //���콺�� �Ű��� ������ 

sITEMREQUIRE sRequire; //������ �䱸ġ �÷�  
POINT ItemBoxPosi; //�ڽ� ��ġ 
POINT ItemBoxSize; //�ڽ� ������ 
POINT TextSetPosi; //�ؽ�Ʈ�� ������ ��ǥ 


char	szInfoBuff[5000];		//�������� ������ ����ִ� ���� 
char    szInfoBuff2[5000];		//�������� ���� ��ġ 

int sinShowItemInfoFlag = 0;    //������ ������ �����ش� 

int tWeaponClass = 0;
int AgingGageFlag = 0;
int AgingBarLenght = 0;

DWORD sinItemTime = 0; //������ ����Ⱓ 
/*----------------------------------------------------------------------------*
*	                �������� �������̽� ���ѱ���
*-----------------------------------------------------------------------------*/
int NotSell_Item_CODECnt = 0;
int NotSell_Item_MASKCnt = 0;
int NotSell_Item_KINDCnt = 0;

int NotDrow_Item_CODECnt = 0;
int NotDrow_Item_MASKCnt = 0;
int NotDrow_Item_KINDCnt = 0;

int NotSet_Item_CODECnt = 0;
int NotSet_Item_MASKCnt = 0;
int NotSet_Item_KINDCnt = 0;


DWORD NotSell_Item_CODE[] = {(sinQT1|sin07),(sinQT1|sin08),0 };
DWORD NotSell_Item_MASK[] = {0 };
DWORD NotSell_Item_KIND[] = {ITEM_KIND_QUEST_WEAPON,0 };

DWORD NotDrow_Item_CODE[] = {(sinQT1|sin07),(sinQT1|sin08),0 };
DWORD NotDrow_Item_MASK[] = {0};
DWORD NotDrow_Item_KIND[] = {ITEM_KIND_QUEST_WEAPON,0 };

DWORD NotSet_Item_CODE[] = {(sinQT1|sin07),(sinQT1|sin08),0 };
DWORD NotSet_Item_MASK[] = {0 };
DWORD NotSet_Item_KIND[] = {ITEM_KIND_QUEST_WEAPON,0 };


/*----------------------------------------------------------------------------*
*	                �����۱���ü�� ������ �ʱ�ȭ�Ѵ� 
*-----------------------------------------------------------------------------*/
sITEM sItem[MAX_ITEM] = {
		
		/*-------------------*
		*	���� (Weapon)					  	
		*--------------------*/
		//Axes A1
		//*Code         *Name				*Category  *Item size			  *Directory    *Class    *Drop����Items��  *Set location
		{sinWA1|sin01  ,"Stone Axe"			,"WA101",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WA101" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin02  ,"Steel Axe"			,"WA102",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WA102" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin03  ,"Battle Axe"		,"WA103",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WA103" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin04  ,"War Axe"			,"WA104",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WA104" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin05  ,"DoubleSidedWarAxe" ,"WA105",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WA105" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin06  ,"Bat Axe"			,"WA106",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WA106" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin07  ,"Mechanic Axe"		,"WA107",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WA107" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin08  ,"Double Head Axe"	,"WA108",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WA108" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin09  ,"Great Axe"			,"WA109",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WA109" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin10  ,"Diamond Axe"		,"WA110",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WA110" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin11  ,"Jagged Axe"		,"WA111",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WA111" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin12  ,"Cleaver"			,"WA112",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WA112" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin13  ,"Gigantifc Axe"		,"WA113",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WA113" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin14  ,"ChaosAxe"			,"WA114",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WA114" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWA1|sin15  ,"SinBaRam Axe"		,"WA115",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WA115" ,INVENTORY_POS_RHAND,SIN_SOUND_AXES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{ sinWA1 | sin16, "Fury Axe", "WA116", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WA116", INVENTORY_POS_RHAND, SIN_SOUND_AXES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWA1 | sin17, "Ancient Axe", "WA117", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WA117", INVENTORY_POS_RHAND, SIN_SOUND_AXES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWA1 | sin18, "Chaos Axe", "WA118", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WA118", INVENTORY_POS_RHAND, SIN_SOUND_AXES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWA1 | sin19, "Relic Axe", "WA119", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WA119", INVENTORY_POS_RHAND, SIN_SOUND_AXES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWA1 | sin20, "Minotaur Axe", "WA120", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WA120", INVENTORY_POS_RHAND, SIN_SOUND_AXES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWA1 | sin21, "Wyvern Axe", "WA121", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WA121", INVENTORY_POS_RHAND, SIN_SOUND_AXES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWA1 | sin22, "Zecram Axe", "WA122", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WA122", INVENTORY_POS_RHAND, SIN_SOUND_AXES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWA1 | sin23, "Dragon Axe", "WA123", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WA123", INVENTORY_POS_RHAND, SIN_SOUND_AXES, ITEM_WEAPONCLASS_NOT_SHOOTING },

		//Claws C1
		{sinWC1|sin01  ,"Eagle Claw"	,"WC101",  ITEMSIZE*1, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC101" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin02  ,"Tiger Claw"	,"WC102",  ITEMSIZE*1, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC102" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin03  ,"Griffin Claw"	,"WC103",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC103" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin04  ,"Eagle Claw"	,"WC104",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC104" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin05  ,"Eagle Claw"	,"WC105",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC105" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin06  ,"Fingered Edge"	,"WC106",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC106" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin07  ,"Hand Blade"	,"WC107",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC107" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin08  ,"Pharaoh"		,"WC108",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC108" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin09  ,"Brutal Claw"	,"WC109",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC109" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin10  ,"Hydra Claw"	,"WC110",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC110" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin11  ,"Leviathan"		,"WC111",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC111" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin12  ,"Wyvern Claw"	,"WC112",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC112" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin13  ,"Chaos Claw"	,"WC113",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC113" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin14  ,"Titan Claw"	,"WC114",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC114" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWC1|sin15  ,"SinBaRam Claw" ,"WC115",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WC115" ,INVENTORY_POS_RHAND,SIN_SOUND_CLAWS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{ sinWC1 | sin16, "Titan Talon", "WC116", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WC116", INVENTORY_POS_RHAND, SIN_SOUND_CLAWS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWC1 | sin17, "Salamander Talon", "WC117", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WC117", INVENTORY_POS_RHAND, SIN_SOUND_CLAWS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWC1 | sin18, "Phoenix Talon", "WC118", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WC118", INVENTORY_POS_RHAND, SIN_SOUND_CLAWS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWC1 | sin19, "Chimera Talon", "WC119", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WC119", INVENTORY_POS_RHAND, SIN_SOUND_CLAWS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWC1 | sin20, "Extreme Talon", "WC120", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WC120", INVENTORY_POS_RHAND, SIN_SOUND_CLAWS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWC1 | sin21, "Viper Talon", "WC121", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WC121", INVENTORY_POS_RHAND, SIN_SOUND_CLAWS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWC1 | sin22, "Injustice Talon", "WC122", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WC122", INVENTORY_POS_RHAND, SIN_SOUND_CLAWS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWC1 | sin23, "Heretic Talon", "WC123", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WC123", INVENTORY_POS_RHAND, SIN_SOUND_CLAWS, ITEM_WEAPONCLASS_NOT_SHOOTING },


		//Hammer & So On H1
		{sinWH1|sin01  ,"Club"         ,"WH101",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH101" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin02  ,"War Mac"      ,"WH102",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH102" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin03  ,"Pole Mace"    ,"WH103",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH103" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin04  ,"Gothic Mace"  ,"WH104",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH104" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin05  ,"War Hammer"   ,"WH105",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH105" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin06  ,"Metal Hammer" ,"WH106",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WH106" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin07  ,"Cross Hammer" ,"WH107",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WH107" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin08  ,"Holy Hammer"  ,"WH108",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH108" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin09  ,"Star"         ,"WH109",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH109" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin10  ,"Maximum"      ,"WH110",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WH110" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin11  ,"Meditaition"  ,"WH111",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WH111" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin12  ,"Rune Hammer"  ,"WH112",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH112" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin13  ,"Solar"        ,"WH113",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WH113" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin14  ,"War Maul"     ,"WH114",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WH114" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin15  ,"Titan Maul"   ,"WH115",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WH115" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWH1|sin16  ,"SinBaRam Mace","WH116",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WH116" ,INVENTORY_POS_RHAND,SIN_SOUND_HAMMER,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{ sinWH1 | sin17, "Brutal Hammer", "WH117", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WH117", INVENTORY_POS_RHAND, SIN_SOUND_HAMMER, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWH1 | sin18, "Gladiator Hammer", "WH118", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WH118", INVENTORY_POS_RHAND, SIN_SOUND_HAMMER, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWH1 | sin19, "Archon Hammer", "WH119", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WH119", INVENTORY_POS_RHAND, SIN_SOUND_HAMMER, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWH1 | sin20, "Justice Hammer", "WH120", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WH120", INVENTORY_POS_RHAND, SIN_SOUND_HAMMER, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWH1 | sin21, "Dragon Bone Hammer", "WH121", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WH121", INVENTORY_POS_RHAND, SIN_SOUND_HAMMER, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWH1 | sin22, "Guardian Hammer", "WH122", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WH122", INVENTORY_POS_RHAND, SIN_SOUND_HAMMER, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWH1 | sin23, "Bane Hammer", "WH123", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WH123", INVENTORY_POS_RHAND, SIN_SOUND_HAMMER, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWH1 | sin24, "Dragon Hammer", "WH124", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WH124", INVENTORY_POS_RHAND, SIN_SOUND_HAMMER, ITEM_WEAPONCLASS_NOT_SHOOTING },

		//Wand -_-;
		{sinWM1|sin01  ,"Wand"			 ,"WM101",  ITEMSIZE*1, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WM101" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin02  ,"Sphere Wand"	 ,"WM102",  ITEMSIZE*1, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WM102" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin03  ,"Obi Wand"		 ,"WM103",  ITEMSIZE*1, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WM103" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin04  ,"Root Staff"	 ,"WM104",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_TWO,"WM104" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin05  ,"Poly Staff" 	 ,"WM105",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WM105" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin06  ,"Elven Wand"	 ,"WM106",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WM106" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin07  ,"Dryad Wand"	 ,"WM107",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WM107" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin08  ,"Meditaion Staff","WM108",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WM108" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin09  ,"Skull Staff"	 ,"WM109",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WM109" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin10  ,"Mage Staff"	 ,"WM110",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WM110" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin11  ,"Faith Wand"	 ,"WM111",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WM111" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin12  ,"Lofty Staff"	 ,"WM112",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WM112" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin13  ,"Arch Wand"		 ,"WM113",  ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WM113" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin14  ,"Chaos Staff"	 ,"WM114",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WM114" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin15  ,"Dragon Staff"	 ,"WM115",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WM115" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{sinWM1|sin16  ,"SinBaRam Staff" ,"WM116",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WM116" ,INVENTORY_POS_RHAND,SIN_SOUND_STAFF,ITEM_WEAPONCLASS_CASTING},
		{ sinWM1 | sin17, "Apostle Wand", "WM117", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WM117", INVENTORY_POS_RHAND, SIN_SOUND_STAFF, ITEM_WEAPONCLASS_CASTING },
		{ sinWM1 | sin18, "Relic Staff", "WM118", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WM118", INVENTORY_POS_RHAND, SIN_SOUND_STAFF, ITEM_WEAPONCLASS_CASTING },
		{ sinWM1 | sin19, "Dragon Staff", "WM119", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WM119", INVENTORY_POS_RHAND, SIN_SOUND_STAFF, ITEM_WEAPONCLASS_CASTING },
		{ sinWM1 | sin20, "Wyvern Wand", "WM120", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WM120", INVENTORY_POS_RHAND, SIN_SOUND_STAFF, ITEM_WEAPONCLASS_CASTING },
		{ sinWM1 | sin21, "Gothic Staff", "WM121", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WM121", INVENTORY_POS_RHAND, SIN_SOUND_STAFF, ITEM_WEAPONCLASS_CASTING },
		{ sinWM1 | sin22, "Oracle Wand", "WM122", ITEMSIZE * 2, ITEMSIZE * 3, "Weapon", ITEM_CLASS_WEAPON_ONE, "WM122", INVENTORY_POS_RHAND, SIN_SOUND_STAFF, ITEM_WEAPONCLASS_CASTING },
		{ sinWM1 | sin23, "Celestial Staff", "WM123", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WM123", INVENTORY_POS_RHAND, SIN_SOUND_STAFF, ITEM_WEAPONCLASS_CASTING },
		{ sinWM1 | sin24, "Astral Staff", "WM124", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WM124", INVENTORY_POS_RHAND, SIN_SOUND_STAFF, ITEM_WEAPONCLASS_CASTING },

		//Poles & Spears P1
		{sinWP1|sin01  ,"Pole"				,"WP101",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WP101" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin02  ,"Spear"				,"WP102",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WP102" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin03  ,"Bill"				,"WP103",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WP103" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin04  ,"Halberd"			,"WP104",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP104" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin05  ,"Horn Scythe"		,"WP105",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP105" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin06  ,"Trident"			,"WP106",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP106" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin07  ,"Enriched Scythe"	,"WP107",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP107" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin08  ,"Double Scythe"		,"WP108",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP108" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin09  ,"Evil Scythe"		,"WP109",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP109" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin10  ,"Silver Bird"		,"WP110",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP110" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin11  ,"Chaos Spear"		,"WP111",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP111" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin12  ,"Titan Spear"		,"WP112",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP112" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin13  ,"Styx Scythe"		,"WP113",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP113" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin14  ,"Dragon's Wing"		,"WP114",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP114" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin15  ,"Rage"				,"WP115",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP115" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWP1|sin16  ,"SinBaRam Darkness" ,"WP116",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WP116" ,INVENTORY_POS_RHAND,SIN_SOUND_POLES,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{ sinWP1 | sin17, "Hyper Scythe", "WP117", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WP117", INVENTORY_POS_RHAND, SIN_SOUND_POLES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWP1 | sin18, "Oracle Spear", "WP118", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WP118", INVENTORY_POS_RHAND, SIN_SOUND_POLES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWP1 | sin19, "Immortal Scythe", "WP119", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WP119", INVENTORY_POS_RHAND, SIN_SOUND_POLES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWP1 | sin20, "Extreme Spear", "WP120", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WP120", INVENTORY_POS_RHAND, SIN_SOUND_POLES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWP1 | sin21, "Hellfire Scythe", "WP121", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WP121", INVENTORY_POS_RHAND, SIN_SOUND_POLES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWP1 | sin22, "Dreadnaught Spear", "WP122", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WP122", INVENTORY_POS_RHAND, SIN_SOUND_POLES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWP1 | sin23, "Reaper Scythe", "WP123", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WP123", INVENTORY_POS_RHAND, SIN_SOUND_POLES, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWP1 | sin24, "Dragon Scythe", "WP124", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WP124", INVENTORY_POS_RHAND, SIN_SOUND_POLES, ITEM_WEAPONCLASS_NOT_SHOOTING },

		//Bows 
		{sinWS1|sin01  ,"Short Bow"       ,"WS101", ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS101"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin02  ,"Horned Bow"      ,"WS102", ITEMSIZE*2, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS102"  ,INVENTORY_POS_RHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin03  ,"Hand CrossBow"   ,"WS103", ITEMSIZE*2, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS103"  ,INVENTORY_POS_RHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin04 ,"CrossBow"         ,"WS104", ITEMSIZE*3, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS104"  ,INVENTORY_POS_RHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin05 ,"Battle Bow"       ,"WS105", ITEMSIZE*2, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS105"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin06 ,"Great Bow"        ,"WS106", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS106"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin07 ,"War Bow"          ,"WS107", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS107"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin08 ,"Great CrossBow"   ,"WS108", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS108"  ,INVENTORY_POS_RHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin09,"MetalHandCrossBow" ,"WS109",	ITEMSIZE*2, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS109"  ,INVENTORY_POS_RHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin10,"Double CrossBow"   ,"WS110", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS110"  ,INVENTORY_POS_RHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin11  ,"Bone Bow"        ,"WS111", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS111"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin12  ,"Sagittarius"     ,"WS112", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS112"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin13,"Ancient CrossBow"  ,"WS113",	ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS113"  ,INVENTORY_POS_RHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin14  ,"Titan Bow"       ,"WS114", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS114"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin15  ,"Chaos Bow"       ,"WS115", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS115"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin16  ,"Dragon Bow"      ,"WS116", ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS116"  ,INVENTORY_POS_LHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{sinWS1|sin17 ,"SinBaRam CrossBow","WS117",	ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS117"  ,INVENTORY_POS_RHAND,SIN_SOUND_SHOOTERS,ITEM_WEAPONCLASS_SHOOTING},
		{ sinWS1 | sin18, "Minotaur Bow", "WS118", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS118", INVENTORY_POS_LHAND, SIN_SOUND_SHOOTERS, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWS1 | sin19, "Wave Bow", "WS119", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS119", INVENTORY_POS_LHAND, SIN_SOUND_SHOOTERS, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWS1 | sin20, "Grande Bow", "WS120", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS120", INVENTORY_POS_RHAND, SIN_SOUND_SHOOTERS, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWS1 | sin21, "Dragon Bow", "WS121", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS121", INVENTORY_POS_LHAND, SIN_SOUND_SHOOTERS, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWS1 | sin22, "Revenge Bow", "WS122", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS122", INVENTORY_POS_LHAND, SIN_SOUND_SHOOTERS, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWS1 | sin23, "Wyvern Bow", "WS123", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS123", INVENTORY_POS_LHAND, SIN_SOUND_SHOOTERS, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWS1 | sin24, "Immortal Bow", "WS124", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS124", INVENTORY_POS_LHAND, SIN_SOUND_SHOOTERS, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWS1 | sin25, "Salamander Bow", "WS125", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS125", INVENTORY_POS_LHAND, SIN_SOUND_SHOOTERS, ITEM_WEAPONCLASS_SHOOTING },

		//Swords
		{sinWS2|sin01  ,"Dagger"         ,"WS201",  ITEMSIZE*1, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS201" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin02  ,"Celtic Dagger"  ,"WS202",  ITEMSIZE*1, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS202" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin03  ,"SwordBreaker"   ,"WS203",  ITEMSIZE*1, ITEMSIZE*2,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS203" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin04  ,"Short Sword"    ,"WS204",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS204" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin05  ,"Long Sword"     ,"WS205",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS205" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin06  ,"Broad Sword"    ,"WS206",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS206" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin07  ,"Blade"          ,"WS207",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS207" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin08  ,"Templar Sword"  ,"WS208",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS208" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin09  ,"Shield Sword"   ,"WS209",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS209" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin10  ,"Plated Sword"   ,"WS210",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS210" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin11  ,"Claymore"       ,"WS211",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS211" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin12  ,"Slayer"         ,"WS212",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS212" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin13  ,"Gigantic Sword" ,"WS213",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS213" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin14  ,"HighLander"     ,"WS214",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS214" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin15  ,"Bastard Sword"  ,"WS215",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS215" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin16  ,"Fatal Sword"    ,"WS216",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS216" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin17  ,"Ancient Sword"    ,"WS217",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WS217" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{sinWS2|sin18  ,"Twin Sword" ,"WS218",  ITEMSIZE*2, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_TWO,"WS218" ,INVENTORY_POS_RHAND,SIN_SOUND_SWORDS,ITEM_WEAPONCLASS_NOT_SHOOTING},
		{ sinWS2 | sin19, "Salamander Sword", "WS219", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS219", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin20, "Avenger Sword", "WS220", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WS220", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin21, "Titan Sword", "WS221", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS221", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin22, "Wyvern Sword", "WS222", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WS222", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin23, "Justice Sword", "WS223", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS223", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin24, "Extreme Sword", "WS224", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS224", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin25, "Mirage Sword", "WS225", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS225", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin26, "Legend Sword", "WS226", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WS226", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin27, "Tirbing Sword", "WS227", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS227", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },
		{ sinWS2 | sin28, "Mythology Sword", "WS228", ITEMSIZE * 2, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_TWO, "WS228", INVENTORY_POS_RHAND, SIN_SOUND_SWORDS, ITEM_WEAPONCLASS_NOT_SHOOTING },

		//Throwing Arms
		{sinWT1|sin01  ,"Javelin"         ,"WT101",  ITEMSIZE*1, ITEMSIZE*3,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT101" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin02  ,"War Javelin"     ,"WT102",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT102" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin03  ,"Edged Javelin"   ,"WT103",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT103" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin04  ,"Steel Javelin"   ,"WT104",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT104" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin05  ,"Double Javelin"  ,"WT105",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT105" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin06  ,"Elven Javelin"   ,"WT106",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT106" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin07  ,"Fatal Javelin"   ,"WT107",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT107" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin08  ,"Metal Javelin"   ,"WT108",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT108" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin09  ,"Cobra"           ,"WT109",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT109" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin10  ,"Winged Javelin"  ,"WT110",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT110" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin11  ,"Holy Javelin"    ,"WT111",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT111" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin12  ,"Throwing Trident","WT112",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT112" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin13  ,"Wyvern Javelin" , "WT113",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT113" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin14  ,"Twisted Javelin", "WT114",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT114" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin15  ,"Linked Javelin" , "WT115",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT115" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},
		{sinWT1|sin16  ,"SinBaRam Javelin","WT116",  ITEMSIZE*1, ITEMSIZE*4,"Weapon",ITEM_CLASS_WEAPON_ONE,"WT116" ,INVENTORY_POS_RHAND,SIN_SOUND_THROWING,ITEM_WEAPONCLASS_SHOOTING},		
		{ sinWT1 | sin17, "Mystic Javelin", "WT117", ITEMSIZE * 1, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WT117", INVENTORY_POS_RHAND, SIN_SOUND_THROWING, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWT1 | sin18, "Extreme Javelin", "WT118", ITEMSIZE * 1, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WT118", INVENTORY_POS_RHAND, SIN_SOUND_THROWING, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWT1 | sin19, "Dragon Javelin", "WT119", ITEMSIZE * 1, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WT119", INVENTORY_POS_RHAND, SIN_SOUND_THROWING, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWT1 | sin20, "Spike Javelin", "WT120", ITEMSIZE * 1, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WT120", INVENTORY_POS_RHAND, SIN_SOUND_THROWING, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWT1 | sin21, "Salamander Javelin", "WT121", ITEMSIZE * 1, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WT121", INVENTORY_POS_RHAND, SIN_SOUND_THROWING, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWT1 | sin22, "Immortal Javelin", "WT122", ITEMSIZE * 1, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WT122", INVENTORY_POS_RHAND, SIN_SOUND_THROWING, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWT1 | sin23, "Heretic Javelin", "WT123", ITEMSIZE * 1, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WT123", INVENTORY_POS_RHAND, SIN_SOUND_THROWING, ITEM_WEAPONCLASS_SHOOTING },
		{ sinWT1 | sin24, "Salamander Javelin", "WT124", ITEMSIZE * 1, ITEMSIZE * 4, "Weapon", ITEM_CLASS_WEAPON_ONE, "WT124", INVENTORY_POS_RHAND, SIN_SOUND_THROWING, ITEM_WEAPONCLASS_SHOOTING },

		/*------------------------*
		*	��ű��� (Amulet , Ring .. )					  	
		*-------------------------*/		
		//Amulet A1
		{sinOA1|sin01  ,"Round Amulet "		,"OA101",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa101" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin02  ,"Round Amulet #1"	,"OA102",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa102" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin03  ,"Round Amulet #2"	,"OA103",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa103" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin04  ,"Round Amulet #3"	,"OA104",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa104" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin05  ,"Gem Amulet "		,"OA105",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa105" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin06  ,"Gem Amulet #1"		,"OA106",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa106" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin07  ,"Gem Amulet #2"		,"OA107",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa107" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin08  ,"Gem Amulet #3"		,"OA108",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa108" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin09  ,"Magic Amulet "		,"OA109",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa109" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin10  ,"Magic Amulet #1"	,"OA110",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa110" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin11  ,"Magic Amulet #2"	,"OA111",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa111" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin12  ,"Magic Amulet #3"	,"OA112",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa112" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin13  ,"Rune Amulet "		,"OA113",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa113" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin14  ,"Rune Amulet #1"	,"OA114",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa114" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin15  ,"Rune Amulet #2"	,"OA115",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa115" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin16  ,"Rune Amulet #3"	,"OA116",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa116" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin17  ,"Sealed Amulet "	,"OA117",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa117" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin18  ,"Sealed Amulet #1"	,"OA118",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa118" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin19  ,"Sealed Amulet #2"	,"OA119",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa119" ,0,SIN_SOUND_AMULET},
		{sinOA1|sin20  ,"Sealed Amulet #3"	,"OA120",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa120" ,0,SIN_SOUND_AMULET},

		//100���� 
		{sinOA1|sin21  ,"Mystic Amulet",     "OA121",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa121" ,0,SIN_SOUND_AMULET},

		// �庰 - ���� �߰�
		{sinOA1|sin22  ,"Mystic Amulet +1",  "OA122",  ITEMSIZE*1, ITEMSIZE*1,"Accessory",ITEM_CLASS_AMULET,"oa122" ,0,SIN_SOUND_AMULET},

		//유니크
		{ sinOA1 | sin30, "켈베쥬 아뮬렛", "OA130", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa130", 0, SIN_SOUND_AMULET },

		// 박재원 - 산타 아뮬렛 추가
		{ sinOA1 | sin32, "Santa Amulet", "OA132", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa132", 0, SIN_SOUND_AMULET },

		// 박재원 - 이벤트 아뮬렛 추가(7일)
		{ sinOA1 | sin33, "Event Amulet", "OA133", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa133", 0, SIN_SOUND_AMULET },

		// 박재원 - 이벤트 아뮬렛 추가(1시간)
		{ sinOA1 | sin34, "Event Amulet(1시간)", "OA134", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa133", 0, SIN_SOUND_AMULET },

		// 박재원 - 이벤트 아뮬렛 추가(1일)
		{ sinOA1 | sin35, "Event Amulet(1일)", "OA135", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa133", 0, SIN_SOUND_AMULET },

		// 장별 - 눈꽃 목걸이 추가(7일) 
		{ sinOA1 | sin36, "Snowflower Amulet(7일)", "OA136", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa136", 0, SIN_SOUND_AMULET },

		// 장별 - 하트 아뮬렛 추가(7일) // 장별 - 캔디데이즈
		{ sinOA1 | sin37, "하트아뮬렛(7일)", "OA137", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa137", 0, SIN_SOUND_AMULET },

		//장별 - 복날 이벤트 아뮬렛 추가
		{ sinOA1 | sin38, "삼계탕 아뮬렛", "OA138", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa138", 0, SIN_SOUND_AMULET },

		// 장별 - 소울스톤 아뮬렛 추가
		{ sinOA1 | sin39, "머핀 아뮬렛", "OA139", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa139", 0, SIN_SOUND_AMULET },
		{ sinOA1 | sin40, "슬리버 아뮬렛", "OA140", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa140", 0, SIN_SOUND_AMULET },
		{ sinOA1 | sin41, "메트론 아뮬렛", "OA141", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa141", 0, SIN_SOUND_AMULET },
		{ sinOA1 | sin42, "그로테스크 아뮬렛", "OA142", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_AMULET, "oa142", 0, SIN_SOUND_AMULET },

		//Armlet A2
		{ sinOA2 | sin01, "Leather Armlets", "OA201", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa201", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin02, "Long Armlets", "OA202", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa202", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin03, "Wide Armlets", "OA203", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa203", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin04, "Fold Armlets", "OA204", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa204", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin05, "Scale Armlets", "OA205", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa205", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin06, "Elven Armlets", "OA206", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa206", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin07, "Solid Armlets", "OA207", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa207", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin08, "Mechanic Armlets", "OA208", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa208", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin09, "Winged Armlets", "OA209", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa209", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin10, "Great Bracelet", "OA210", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa210", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin11, "Steel Bracelet", "OA211", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa211", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin12, "Magicial Bracelet", "OA212", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa212", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin13, "Spiked Bracelet", "OA213", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa213", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin14, "Justice Bracelet", "OA214", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa214", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin15, "Minotaur Bracelet", "OA215", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa215", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin16, "Metal Bracelet", "OA216", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa216", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin17, "Titan Bracelet", "OA217", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa217", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin18, "Saint Bracelet", "OA218", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa218", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin19, "Wyvern Bracelet", "OA219", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa219", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin20, "Dragon Bracelet", "OA220", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa220", 0, SIN_SOUND_Armlet },

		//100렙제
		{ sinOA2 | sin21, "Inferno Bracelets", "OA221", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa221", 0, SIN_SOUND_Armlet },

		// pluto 제작 아이템
		{ sinOA2 | sin22, "Phoenix Bracelets", "OA222", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa222", 0, SIN_SOUND_Armlet },

		{ sinOA2 | sin23, "Frenzy Bracelets", "OA223", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_ARMLET, "oa223", 0, SIN_SOUND_Armlet },

		// 박재원 - 슈퍼 암릿 아이템 추가
		{ sinOA2 | sin31, "Super Armlets(7일)", "OA231", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa231", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin32, "Super Armlets(30일)", "OA232", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa232", 0, SIN_SOUND_Armlet },
		// 장별 - 슈퍼 암릿(1일)
		{ sinOA2 | sin33, "Super Armlets(1일)", "OA233", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa233", 0, SIN_SOUND_Armlet },
		{ sinOA2 | sin34, "Super Armlets(1시간)", "OA234", ITEMSIZE * 2, ITEMSIZE * 1, "Accessory", ITEM_CLASS_ARMLET, "oa234", 0, SIN_SOUND_Armlet },


		//Magicial Stuffs M1
		{ sinOM1 | sin01, "Pearl Beads", "OM101", ITEMSIZE * 1, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om101", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin02, "Crystal Sphere", "OM102", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om102", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin03, "Prizm Sphere", "OM103", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om103", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin04, "Bone Beads", "OM104", ITEMSIZE * 1, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om104", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin05, "Skull Beads", "OM105", ITEMSIZE * 1, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om105", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin06, "Orb", "OM106", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om106", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin07, "Holy Orb", "OM107", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om107", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin08, "Arch Orb", "OM108", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om108", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin09, "Dark Moon", "OM109", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om109", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin10, "Ceremonial Sphere", "OM110", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om110", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin11, "Orbital Beads", "OM111", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om111", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin12, "Harmony Sphere", "OM112", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om112", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin13, "Angel", "OM113", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om113", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin14, "Lucifer", "OM114", ITEMSIZE * 1, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om114", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin15, "Astral Orb", "OM115", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om115", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin16, "Rune Beads", "OM116", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om116", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin17, "Creation Orb", "OM117", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om117", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin18, "Mundane", "OM118", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om118", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin19, "Salamander Beads", "OM119", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om119", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin20, "Cosmos", "OM120", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om120", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },
		{ sinOM1 | sin21, "Wyvern Orb", "OM121", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om121", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },

		//100렙제 
		{ sinOM1 | sin22, "Ebony Manes", "OM122", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om122", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },

		// pluto 제작 아이템
		{ sinOM1 | sin23, "Avernus Beads", "OM123", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om123", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },

		{ sinOM1 | sin24, "Malice Rosary", "OM124", ITEMSIZE * 2, ITEMSIZE * 2, "Accessory", ITEM_CLASS_MAGICIAL_STUFFS, "om124", INVENTORY_POS_LHAND, SIN_SOUND_MAGICIAL },

		//Ring R1
		{ sinOR1 | sin01, "Round Ring ", "OR101", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or101", 0, SIN_SOUND_RING },
		{ sinOR1 | sin02, "Round Ring #1", "OR102", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or102", 0, SIN_SOUND_RING },
		{ sinOR1 | sin03, "Round Ring #2", "OR103", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or103", 0, SIN_SOUND_RING },
		{ sinOR1 | sin04, "Round Ring #3", "OR104", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or104", 0, SIN_SOUND_RING },
		{ sinOR1 | sin05, "Gem RIng ", "OR105", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or105", 0, SIN_SOUND_RING },
		{ sinOR1 | sin06, "Gem RIng #1", "OR106", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or106", 0, SIN_SOUND_RING },
		{ sinOR1 | sin07, "Gem RIng #2", "OR107", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or107", 0, SIN_SOUND_RING },
		{ sinOR1 | sin08, "Gem RIng #3", "OR108", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or108", 0, SIN_SOUND_RING },
		{ sinOR1 | sin09, "Magic Ring ", "OR109", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or109", 0, SIN_SOUND_RING },
		{ sinOR1 | sin10, "Magic Ring #1", "OR110", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or110", 0, SIN_SOUND_RING },
		{ sinOR1 | sin11, "Magic Ring #2", "OR111", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or111", 0, SIN_SOUND_RING },
		{ sinOR1 | sin12, "Magic Ring #3", "OR112", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or112", 0, SIN_SOUND_RING },
		{ sinOR1 | sin13, "Rune Ring ", "OR113", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or113", 0, SIN_SOUND_RING },
		{ sinOR1 | sin14, "Rune Ring #1", "OR114", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or114", 0, SIN_SOUND_RING },
		{ sinOR1 | sin15, "Rune Ring #2", "OR115", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or115", 0, SIN_SOUND_RING },
		{ sinOR1 | sin16, "Rune Ring #3", "OR116", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or116", 0, SIN_SOUND_RING },
		{ sinOR1 | sin17, "Sealed Ring ", "OR117", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or117", 0, SIN_SOUND_RING },
		{ sinOR1 | sin18, "Sealed Ring #1", "OR118", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or118", 0, SIN_SOUND_RING },
		{ sinOR1 | sin19, "Sealed Ring #2", "OR119", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or119", 0, SIN_SOUND_RING },
		{ sinOR1 | sin20, "Sealed Ring #3", "OR120", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or120", 0, SIN_SOUND_RING },
		//100렙제
		{ sinOR1 | sin21, "Mystic Ring", "OR121", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or121", 0, SIN_SOUND_RING },

		{ sinOR1 | sin22, "Mystic Ring +1", "OR122", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or122", 0, SIN_SOUND_RING },

		//Sheltom S1  
		{ sinOS1 | sin01, "Lucidy", "OS101", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os101", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin02, "Sereno", "OS102", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os102", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin03, "Fadeo", "OS103", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os103", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin04, "Sparky", "OS104", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os104", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin05, "Raident", "OS105", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os105", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin06, "Transparo", "OS106", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os106", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin07, "Murky", "OS107", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os107", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin08, "Devine", "OS108", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os108", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin09, "Celesto", "OS109", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os109", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin10, "Mirage", "OS110", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os110", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin11, "Inferna", "OS111", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os111", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin12, "Enigma", "OS112", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os112", 0, SIN_SOUND_SHELTOM },
		//100렙제 
		{ sinOS1 | sin13, "Bellum", "OS113", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os113", 0, SIN_SOUND_SHELTOM },
		// 박재원 - 오르도 쉘텀 추가(에이징 19, 20차때 사용)
		{ sinOS1 | sin14, "Ordo", "OS114", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os114", 0, SIN_SOUND_SHELTOM },

		// 박재원 - 매직 쉘텀 14종 추가(매직 포스 제작용) 매직 포스 추가
		{ sinOS1 | sin21, "Magic Lucidy", "OS121", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os101", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin22, "Magic Sereno", "OS122", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os102", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin23, "Magic Fadeo", "OS123", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os103", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin24, "Magic Sparky", "OS124", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os104", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin25, "Magic Raident", "OS125", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os105", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin26, "Magic Transparo", "OS126", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os106", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin27, "Magic Murky", "OS127", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os107", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin28, "Magic Devine", "OS128", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os108", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin29, "Magic Celesto", "OS129", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os109", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin30, "Magic Mirage", "OS130", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os110", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin31, "Magic Inferna", "OS131", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os111", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin32, "Magic Enigma", "OS132", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os112", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin33, "Magic Bellum", "OS133", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os113", 0, SIN_SOUND_SHELTOM },
		{ sinOS1 | sin34, "Magic Ordo", "OS134", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SHELTOM, "os114", 0, SIN_SOUND_SHELTOM },

		//Force Orb
		{ sinFO1 | sin01, "Lucidy Force", "FO101", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os101", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin02, "Sereno Force", "FO102", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os102", 0, SIN_SOUND_SHELTOM },

		{ sinFO1 | sin03, "Fadeo Force", "FO103", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os103", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin04, "Sparky Force", "FO104", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os104", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin05, "Raident Force", "FO105", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os105", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin06, "Transparo Force", "FO106", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os106", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin07, "Murky Force", "FO107", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os107", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin08, "Devine Force", "FO108", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os108", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin09, "Celesto Force", "FO109", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os109", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin10, "Mirage Force", "FO110", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os110", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin11, "Inferna Force", "FO111", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os111", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin12, "Enigma Force", "FO112", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os112", 0, SIN_SOUND_SHELTOM },
		// 박재원 - 일반 포스 2종 추가(벨룸, 오르도 포스 추가)
		{ sinFO1 | sin13, "Bellum Force", "FO113", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os113", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin14, "Ordo Force", "FO114", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os114", 0, SIN_SOUND_SHELTOM },

		// 박재원 - 매직 포스 14종 추가(매직 포스 추가)
		{ sinFO1 | sin21, "Magic Lucidy Force", "FO121", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os101", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin22, "Magic Sereno Force", "FO122", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os102", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin23, "Magic Fadeo Force", "FO123", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os103", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin24, "Magic Sparky Force", "FO124", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os104", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin25, "Magic Raident Force", "FO125", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os105", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin26, "Magic Transparo Force", "FO126", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os106", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin27, "Magic Murky Force", "FO127", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os107", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin28, "Magic Devine Force", "FO128", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os108", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin29, "Magic Celesto Force", "FO129", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os109", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin30, "Magic Mirage Force", "FO130", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os110", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin31, "Magic Inferna Force", "FO131", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os111", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin32, "Magic Enigma Force", "FO132", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os112", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin33, "Magic Bellum Force", "FO133", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os113", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin34, "Magic Ordo Force", "FO134", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os114", 0, SIN_SOUND_SHELTOM },

		// 박재원 -빌링 매직 포스 추가
		{ sinFO1 | sin35, "Magic Force(1H)", "FO135", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os135", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin36, "Magic Force(3H)", "FO136", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os136", 0, SIN_SOUND_SHELTOM },
		{ sinFO1 | sin37, "Magic Force(1Day)", "FO137", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_FORCEORB, "os137", 0, SIN_SOUND_SHELTOM },

		/*------------------------*
		*	방어구  (Amor ,Boots .. )
		*-------------------------*/

		//갑옷
		{ sinDA1 | sin01, "Nude", "DA101", ITEMSIZE * 0, ITEMSIZE * 0, "Defense", ITEM_CLASS_ARMOR, "da101", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR }, //Nude
		{ sinDA1 | sin02, "Battle Suit", "DA102", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da102", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin03, "Leather Armor", "DA103", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da103", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin04, "Brigandine", "DA104", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da104", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin05, "Steel Armor", "DA105", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da105", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin06, "Round Armor", "DA106", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da106", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin07, "Breast Plate Armor", "DA107", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da107", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin08, "Ring Armor", "DA108", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da108", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin09, "Scale Armor", "DA109", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da109", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin10, "Synthethic Armor", "DA110", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da110", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin11, "Full Plate Armor", "DA111", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da111", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin12, "Full Metal Armor", "DA112", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da112", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin13, "Supreme Armor", "DA113", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da113", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin14, "Spiked Armor", "DA114", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da114", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin15, "Titan Armor", "DA115", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da115", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin16, "Extreme Armor", "DA116", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da116", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin17, "Ancient Armor", "DA117", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da117", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin18, "Minotaur Armor", "DA118", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da118", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin19, "Doom Armor", "DA119", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da119", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin20, "Salamander Armor", "DA120", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da120", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin21, "Wyvern Armor", "DA121", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da121", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin22, "Dragon Armor", "DA122", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da122", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		//100렙제 
		{ sinDA1 | sin23, "PhoeniX Armor", "DA123", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da123", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		// pluto 제작 아이템
		{ sinDA1 | sin24, "Frenzy Armor", "DA124", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da124", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA1 | sin25, "HighLander Armor", "DA125", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da125", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		//로브
		{ sinDA2 | sin01, "Nude", "DA201", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da202", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR }, //Nude
		{ sinDA2 | sin02, "Faded Robe", "DA202", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da202", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin03, "Enhanced Robe", "DA203", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da203", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin04, "Battle Robe", "DA204", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da204", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin05, "Elven Robe", "DA205", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da205", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin06, "Dryad Robe", "DA206", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da206", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin07, "Nymph Robe", "DA207", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da207", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin08, "Apperntice Robe", "DA208", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da208", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin09, "Disciple Robe", "DA209", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da209", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin10, "Master Robe", "DA210", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da210", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin11, "Arch Robe", "DA211", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da211", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin12, "Saint Robe", "DA212", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da212", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin13, "Royal Robe", "DA213", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da213", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin14, "Mystic Robe", "DA214", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da214", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin15, "Devine Robe", "DA215", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da215", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin16, "Bishop", "DA216", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da216", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin17, "Celestial Robe", "DA217", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da217", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin18, "Salvation Robe", "DA218", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da218", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin19, "Alchemist Robe", "DA219", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da219", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin20, "Astral Robe", "DA220", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da220", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin21, "Archon Robe", "DA221", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da221", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin22, "Angel Robe", "DA222", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da222", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		//100렙제 
		{ sinDA2 | sin23, "Ruah Robe", "DA223", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da223", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		// pluto 제작 아이템
		{ sinDA2 | sin24, "Eternal Robe", "DA224", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da224", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA2 | sin25, "Archangel Robe", "DA225", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da225", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		//========
		{ sinDA1 | sin31, "파티 코스튬(7일)", "DA131", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da131", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin32, "파티 코스튬(30일)", "DA132", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da132", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin33, "파티 코스튬(7일)", "DA133", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da133", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin34, "파티 코스튬(30일)", "DA134", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da134", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA1 | sin35, "이다스 아머(7일)", "DA135", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da135", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin36, "이다스 아머(30일)", "DA136", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da136", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin37, "이다스 아머(7일)", "DA137", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da137", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin38, "이다스 아머(30일)", "DA138", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da138", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA1 | sin39, "실버 파티 코스튬(7일)", "DA139", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da139", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin40, "실버 파티 코스튬(30일)", "DA140", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da140", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin41, "실버 파티 코스튬(7일)", "DA141", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da141", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin42, "실버 파티 코스튬(30일)", "DA142", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da142", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA1 | sin43, "탈레스 아머(7일)", "DA143", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da143", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin44, "탈레스 아머(30일)", "DA144", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da144", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin45, "탈레스 아머(7일)", "DA145", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da145", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin46, "탈레스 아머(30일)", "DA146", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da146", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		//
		{ sinDA2 | sin31, "파티 코스튬(7일)", "DA231", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da231", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin32, "파티 코스튬(30일)", "DA232", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da232", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin33, "파티 코스튬(7일)", "DA233", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da233", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin34, "파티 코스튬(30일)", "DA234", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da234", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA2 | sin35, "마르다노스 로브(7일)", "DA235", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da235", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin36, "마르다노스 로브(30일)", "DA236", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da236", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin37, "마르다노스 로브(7일)", "DA237", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da237", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin38, "마르다노스 로브(30일)", "DA238", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da238", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA2 | sin39, "실버 파티 코스튬(7일)", "DA239", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da239", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin40, "실버 파티 코스튬(30일)", "DA240", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da240", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin41, "실버 파티 코스튬(7일)", "DA241", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da241", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin42, "실버 파티 코스튬(30일)", "DA242", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da242", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA2 | sin43, "미갈 로브(7일)", "DA243", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da243", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin44, "미갈 로브(30일)", "DA244", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da244", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin45, "미갈 로브(7일)", "DA245", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da245", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin46, "미갈 로브(30일)", "DA246", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da246", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		//======================================== 월드컵 응원복 060602 성근 ===============================================================================
		{ sinDA1 | sin47, "레플리카 갑옷", "DA147", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da147", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin47, "레리카 로브", "DA247", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da247", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		// pluto 설날 이벤트 한복
		{ sinDA1 | sin48, "한복 갑옷", "DA148", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da148", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin48, "한복 로브", "DA248", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da248", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		//일본전용 _LANGUAGE_JAPANESE
		{ sinDA1 | sin49, "가이아 아머", "DA149", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da149", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin49, "가이아 로브", "DA249", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da249", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA1 | sin50, "이리스 아머", "DA150", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da150", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin50, "이리스 로브", "DA250", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da250", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		// 장별 - 대장장이의 혼
		{ sinDA1 | sin51, "블랙 가이아 아머", "DA151", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da151", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin51, "블랙 가이아 로브", "DA251", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da251", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		{ sinDA1 | sin52, "블랙 이리스 아머", "DA152", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da152", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin52, "블랙 이리스 로브", "DA252", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da252", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		// 박재원 - 수영복 복장 추가
		{ sinDA1 | sin54, "남자 수영복(30일)", "DA154", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da154", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin54, "남자 수영복(30일)", "DA254", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da254", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA1 | sin55, "여자 수영복(30일)", "DA155", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da155", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },
		{ sinDA2 | sin55, "여자 수영복(30일)", "DA255", ITEMSIZE * 3, ITEMSIZE * 4, "Defense", ITEM_CLASS_ARMOR, "da255", INVENTORY_POS_ARMOR, SIN_SOUND_ARMOR },

		//Boots B1
		{ sinDB1 | sin01, "Leather Boots", "DB101", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db101", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin02, "Elven Boots", "DB102", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db102", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin03, "Steel Boots", "DB103", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db103", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin04, "Long Boots", "DB104", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db104", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin05, "Chain Boots", "DB105", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db105", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin06, "Plated Boots", "DB106", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db106", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin07, "Brass Boots", "DB107", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db107", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin08, "War Boots", "DB108", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db108", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin09, "Metal Boots", "DB109", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db109", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin10, "Chaos Boots", "DB110", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db110", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin11, "Holy Boots", "DB111", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db111", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin12, "Spiked Boots", "DB112", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db112", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin13, "Grand Boots", "DB113", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db113", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin14, "Winged Boots", "DB114", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db114", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin15, "Titan Boots", "DB115", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db115", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin16, "Saint Boots", "DB116", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db116", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin17, "Wyvern Boots", "DB117", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db117", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin18, "Rune Boots", "DB118", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db118", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin19, "Royal Boots", "DB119", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db119", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin20, "Dragon Boots", "DB120", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db120", 0, SIN_SOUND_BOOTS },
		//100렙제
		{ sinDB1 | sin21, "Inferno Boots", "DB121", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db121", 0, SIN_SOUND_BOOTS },

		// pluto 제작 아이템
		{ sinDB1 | sin22, "Phoenix Boots", "DB122", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db122", 0, SIN_SOUND_BOOTS },

		{ sinDB1 | sin23, "Frenzy Boots", "DB123", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db123", 0, SIN_SOUND_BOOTS },

		//유니크 부츠 
		{ sinDB1 | sin30, "Mokova Boots ", "DB130", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db130", 0, SIN_SOUND_BOOTS },
		// 박재원 - 스피드부츠 아이템(7일, 30일)
		{ sinDB1 | sin31, "Speed Boots(7일)", "DB131", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db131", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin32, "Speed Boots(30일)", "DB132", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db132", 0, SIN_SOUND_BOOTS },
		// 장별 - 스피드 부츠(1일)
		{ sinDB1 | sin33, "Speed Boots(1일)", "DB133", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db133", 0, SIN_SOUND_BOOTS },
		{ sinDB1 | sin34, "Speed Boots(1시간)", "DB134", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_BOOTS, "db134", 0, SIN_SOUND_BOOTS },

		//Gloves G1
		{ sinDG1 | sin01, "Leather Gloves", "DG101", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg101", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin02, "Leather Half Gauntlets", "DG102", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg102", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin03, "Steel Half Gauntlets", "DG103", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg103", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin04, "Clamshell Gauntlets", "DG104", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg104", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin05, "Finger Gauntlets", "DG105", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg105", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin06, "Gothic Mitten Gauntlets", "DG106", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg106", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin07, "War Gauntlets", "DG107", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg107", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin08, "Metal Gauntlets", "DG108", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg108", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin09, "Holy Gauntlets", "DG109", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg109", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin10, "Great Gauntlets", "DG110", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg110", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin11, "Brass Gauntlets", "DG111", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg111", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin12, "Giant Gauntlets", "DG112", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg112", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin13, "Titan Gauntlets", "DG113", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg113", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin14, "Grand Gauntlets", "DG114", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg114", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin15, "Ivory Gauntlets", "DG115", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg115", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin16, "Saint Gauntlets", "DG116", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg116", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin17, "Diamond Gauntlets", "DG117", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg117", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin18, "Angel Gauntlets", "DG118", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg118", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin19, "Relic Gauntlets", "DG119", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg119", 0, SIN_SOUND_GLOVES },
		{ sinDG1 | sin20, "Dragon Gauntlets", "DG120", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg120", 0, SIN_SOUND_GLOVES },
		//100렙제
		{ sinDG1 | sin21, "INferno Gauntlets", "DG121", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg121", 0, SIN_SOUND_GLOVES },

		// pluto 제작 아이템
		{ sinDG1 | sin22, "Phoenix Gauntlets", "DG122", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg122", 0, SIN_SOUND_GLOVES },

		{ sinDG1 | sin23, "Frenzy Gauntlets", "DG123", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_GLOVES, "dg123", 0, SIN_SOUND_GLOVES },

		//Shields S1 //현재 방패 드롭아이템을 고쳤다 음하하하 
		{ sinDS1 | sin01, "Wood Shield", "DS101", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_SHIELDS, "ds101", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin02, "Targe", "DS102", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_SHIELDS, "ds102", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin03, "Steel Buckler", "DS103", ITEMSIZE * 2, ITEMSIZE * 2, "Defense", ITEM_CLASS_SHIELDS, "ds103", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin04, "Kite Shield", "DS104", ITEMSIZE * 2, ITEMSIZE * 3, "Defense", ITEM_CLASS_SHIELDS, "ds104", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin05, "Tower Shield", "DS105", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds105", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin06, "Metalic Shield", "DS106", ITEMSIZE * 2, ITEMSIZE * 3, "Defense", ITEM_CLASS_SHIELDS, "ds106", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin07, "Scutum", "DS107", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds107", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin08, "Great Shield", "DS108", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds108", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin09, "Brass Shield", "DS109", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds109", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin10, "Claw Shield", "DS110", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds110", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin11, "Winged Shield", "DS111", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds111", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin12, "Spiked Shield", "DS112", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds112", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin13, "Grand Shield", "DS113", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds113", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin14, "Titan Shield", "DS114", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds114", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin15, "Gladiator Shield", "DS115", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds115", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin16, "Fury Shield", "DS116", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds116", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin17, "Titan Shield", "DS117", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds117", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin18, "Mystic Shield", "DS118", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds118", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin19, "Vampire Shield", "DS119", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds119", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		{ sinDS1 | sin20, "Dragon Shield", "DS120", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds120", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },
		//100렙제 
		{ sinDS1 | sin21, "Phoenix Shield", "DS121", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds121", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },

		// pluto 제작 아이템
		{ sinDS1 | sin22, "Dreadnaught Shield", "DS122", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds122", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },

		{ sinDS1 | sin23, "Inferno Shield", "DS123", ITEMSIZE * 2, ITEMSIZE * 4, "Defense", ITEM_CLASS_SHIELDS, "ds123", INVENTORY_POS_LHAND, SIN_SOUND_SHIELDS },


		//Ring R2
		{ sinOR2 | sin01, "절대반지-_-", "OR201", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or201", 0, SIN_SOUND_RING },
		{ sinOR2 | sin02, "아케인 링", "OR202", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or202", 0, SIN_SOUND_RING },
		{ sinOR2 | sin03, "엠페러 링", "OR203", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or203", 0, SIN_SOUND_RING },
		{ sinOR2 | sin04, "포커스 링", "OR204", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or204", 0, SIN_SOUND_RING },

		//Ring R2
		//작성자 : 박재원,  작성일 : 08.04.07
		//내  용 : 클랜치프 링 추가
		{ sinOR2 | sin05, "발렌토 링", "OR205", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or205", 0, SIN_SOUND_RING },
		{ sinOR2 | sin06, "짱피 링", "OR206", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or206", 0, SIN_SOUND_RING },
		{ sinOR2 | sin07, "메키스트 링", "OR207", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or207", 0, SIN_SOUND_RING },
		{ sinOR2 | sin08, "이드 링    ", "OR208", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or208", 0, SIN_SOUND_RING },
		{ sinOR2 | sin09, "플래틴 마브 링", "OR209", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or209", 0, SIN_SOUND_RING },
		{ sinOR2 | sin10, "그레이브 샤킨스 링", "OR210", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or210", 0, SIN_SOUND_RING },
		{ sinOR2 | sin11, "싸이클론 링", "OR211", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or211", 0, SIN_SOUND_RING },
		{ sinOR2 | sin12, "바우톤 링", "OR212", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or212", 0, SIN_SOUND_RING },
		{ sinOR2 | sin13, "길티 고든 링", "OR213", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or213", 0, SIN_SOUND_RING },
		{ sinOR2 | sin14, "엘 라시 쿤 링", "OR214", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or214", 0, SIN_SOUND_RING },
		{ sinOR2 | sin15, "프라이트 네뮨 링", "OR215", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or215", 0, SIN_SOUND_RING },
		{ sinOR2 | sin16, "어파스터시 링", "OR216", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or216", 0, SIN_SOUND_RING },
		{ sinOR2 | sin17, "언홀리 나이트 링", "OR217", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or217", 0, SIN_SOUND_RING },
		{ sinOR2 | sin18, "베가 드미르 링", "OR218", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or218", 0, SIN_SOUND_RING },
		{ sinOR2 | sin19, "베가 드미트리 링", "OR219", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or219", 0, SIN_SOUND_RING },
		{ sinOR2 | sin20, "슬레이온 링", "OR220", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or220", 0, SIN_SOUND_RING },
		{ sinOR2 | sin21, "블러디 로즈 링", "OR221", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or221", 0, SIN_SOUND_RING },
		{ sinOR2 | sin22, "헬싱 링", "OR222", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or222", 0, SIN_SOUND_RING },
		{ sinOR2 | sin23, "베르문 악타룬 링", "OR223", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or223", 0, SIN_SOUND_RING },
		{ sinOR2 | sin24, "스틱스 아르칸 링", "OR224", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or224", 0, SIN_SOUND_RING },
		{ sinOR2 | sin25, "라샤'스 링", "OR225", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or225", 0, SIN_SOUND_RING },

		// 박재원 - 산타 링 추가
		{ sinOR2 | sin27, "Santa Ring", "OR227", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or227", 0, SIN_SOUND_RING },
		// 박재원 - 이벤트 링 추가(7일)
		{ sinOR2 | sin28, "Event Ring", "OR228", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or228", 0, SIN_SOUND_RING },
		// 박재원 - 이벤트 링 추가(1시간)
		{ sinOR2 | sin29, "Event Ring(1시간)", "OR229", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or228", 0, SIN_SOUND_RING },
		// 박재원 - 이벤트 링 추가(1일)
		{ sinOR2 | sin30, "Event Ring(1일)", "OR230", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or228", 0, SIN_SOUND_RING },
		// 박재원 - 보스 몬스터 링 추가
		{ sinOR2 | sin31, "Babel Ring", "OR231", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or231", 0, SIN_SOUND_RING },
		{ sinOR2 | sin32, "Fury Ring", "OR232", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or232", 0, SIN_SOUND_RING },
		// 장별 - 하트링 추가
		{ sinOR2 | sin33, "Heart Ring(7일)", "OR233", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or233", 0, SIN_SOUND_RING },
		//장별 - 복날 이벤트 링 추가
		{ sinOR2 | sin34, "후라이드 치킨 링", "OR234", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or234", 0, SIN_SOUND_RING },
		{ sinOR2 | sin35, "양념 치킨 링", "OR235", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or235", 0, SIN_SOUND_RING },
		// 장별 - 소울스톤 링 추가
		{ sinOR2 | sin36, "디코이 링", "OR236", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or236", 0, SIN_SOUND_RING },
		{ sinOR2 | sin37, "타이탄 링", "OR237", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or237", 0, SIN_SOUND_RING },
		{ sinOR2 | sin38, "위치 링", "OR238", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or238", 0, SIN_SOUND_RING },
		{ sinOR2 | sin39, "새드니스 링", "OR239", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or239", 0, SIN_SOUND_RING },
		{ sinOR2 | sin40, "굴가르 링", "OR240", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or240", 0, SIN_SOUND_RING },

		//Potion
		{ sinPM1 | sin01, "Small  Mana Potion", "PM101", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "pm101", 0, SIN_SOUND_POTION },
		{ sinPM1 | sin02, "Middle Mana Potion", "PM102", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "pm101", 0, SIN_SOUND_POTION },
		{ sinPM1 | sin03, "High   Mana Potion", "PM103", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "pm101", 0, SIN_SOUND_POTION },
		{ sinPM1 | sin04, "Greate Mana Potion", "PM104", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "pm101", 0, SIN_SOUND_POTION },

		{ sinPL1 | sin01, "Small  Life Potion", "PL101", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "pl101", 0, SIN_SOUND_POTION },
		{ sinPL1 | sin02, "Middle Life Potion", "PL102", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "pl101", 0, SIN_SOUND_POTION },
		{ sinPL1 | sin03, "High   Life Potion", "PL103", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "pl101", 0, SIN_SOUND_POTION },
		{ sinPL1 | sin04, "Greate Life Potion", "PL104", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "pl101", 0, SIN_SOUND_POTION },

		{ sinPS1 | sin01, "Small  Stamina Potion", "PS101", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "ps101", 0, SIN_SOUND_POTION },
		{ sinPS1 | sin02, "Middle Stamina Potion", "PS102", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "ps101", 0, SIN_SOUND_POTION },
		{ sinPS1 | sin03, "High   Stamina Potion", "PS103", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "ps101", 0, SIN_SOUND_POTION },
		{ sinPS1 | sin04, "Greate Stamina Potion", "PS104", ITEMSIZE * 1, ITEMSIZE * 1, "Potion", ITEM_CLASS_POTION, "ps101", 0, SIN_SOUND_POTION },

		//귀환 아이템 
		{ sinEC1 | sin01, "리카르텐 귀환", "EC101", ITEMSIZE * 2, ITEMSIZE * 1, "Potion", ITEM_CLASS_ECORE, "ec101", 0, SIN_SOUND_Armlet },
		{ sinEC1 | sin02, "네비스코 귀환", "EC102", ITEMSIZE * 2, ITEMSIZE * 1, "Potion", ITEM_CLASS_ECORE, "ec102", 0, SIN_SOUND_Armlet },
		{ sinEC1 | sin03, "루이넨   귀환", "EC103", ITEMSIZE * 2, ITEMSIZE * 1, "Potion", ITEM_CLASS_ECORE, "ec102", 0, SIN_SOUND_Armlet },
		{ sinEC1 | sin04, "필라이   귀환", "EC104", ITEMSIZE * 2, ITEMSIZE * 1, "Potion", ITEM_CLASS_ECORE, "ec102", 0, SIN_SOUND_Armlet },
		{ sinEC1 | sin05, "유니온   코어", "EC105", ITEMSIZE * 2, ITEMSIZE * 1, "Potion", ITEM_CLASS_ECORE, "ec102", 0, SIN_SOUND_Armlet },

		//퀘스트 아이템
		{ sinQT1 | sin01, "전업아이템", "QT101", ITEMSIZE * 2, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT101", 0, SIN_SOUND_Armlet },
		{ sinQT1 | sin02, "전업아이템", "QT102", ITEMSIZE * 2, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT102", 0, SIN_SOUND_Armlet },
		{ sinQT1 | sin03, "전업아이템", "QT103", ITEMSIZE * 2, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT103", 0, SIN_SOUND_Armlet },

		//MakeResultItem
		{ sinQT1 | sin04, "로얄제리", "QT104", ITEMSIZE * 2, ITEMSIZE * 2, "Make", ITEM_CLASS_QUEST, "QT104", 0, SIN_SOUND_MAGICIAL },
		{ sinQT1 | sin05, "발모제", "QT105", ITEMSIZE * 2, ITEMSIZE * 2, "Make", ITEM_CLASS_QUEST, "QT105", 0, SIN_SOUND_MAGICIAL },
		{ sinQT1 | sin06, "뱀프쉘텀  ", "QT106", ITEMSIZE * 1, ITEMSIZE * 1, "Quest", ITEM_CLASS_QUEST, "QT106", 0, SIN_SOUND_SHELTOM },

		//LevelQuest
		{ sinQT1 | sin07, "로이트라", "QT107", ITEMSIZE * 2, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT107", 0, SIN_SOUND_MAGICIAL },
		{ sinQT1 | sin08, "칼리아의눈물", "QT108", ITEMSIZE * 2, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT108", 0, SIN_SOUND_MAGICIAL },
		{ sinQT1 | sin09, "골덴 뱀프", "QT109", ITEMSIZE * 1, ITEMSIZE * 1, "Quest", ITEM_CLASS_QUEST, "QT109", 0, SIN_SOUND_SHELTOM },
		{ sinQT1 | sin10, "실버 뱀프", "QT110", ITEMSIZE * 1, ITEMSIZE * 1, "Quest", ITEM_CLASS_QUEST, "QT110", 0, SIN_SOUND_SHELTOM },
		{ sinQT1 | sin11, "브론즈 뱀프", "QT111", ITEMSIZE * 1, ITEMSIZE * 1, "Quest", ITEM_CLASS_QUEST, "QT111", 0, SIN_SOUND_SHELTOM },
		{ sinQT1 | sin12, "추천서", "QT112", ITEMSIZE * 2, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT112", 0, SIN_SOUND_Armlet },
		{ sinQT1 | sin13, "로열아뮬렛", "QT113", ITEMSIZE * 1, ITEMSIZE * 1, "Quest", ITEM_CLASS_QUEST, "QT113", 0, SIN_SOUND_RING },

		//초보 퀘스트
		{ sinQT1 | sin14, "막대사탕", "QT114", ITEMSIZE * 1, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT114", 0, SIN_SOUND_SHELTOM },
		{ sinQT1 | sin15, "생크림 케익", "QT115", ITEMSIZE * 2, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT115", 0, SIN_SOUND_Armlet },
		{ sinQT1 | sin16, "엄프의 망치", "QT116", ITEMSIZE * 2, ITEMSIZE * 2, "Quest", ITEM_CLASS_QUEST, "QT116", 0, SIN_SOUND_RING },


		//이벤트 아이템 (송편)
		{ sinSP1 | sin01, "작은 송편", "SP101", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP101", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin02, "큰   송편", "SP102", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP102", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin03, "삼계탕", "SP103", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP103", 0, SIN_SOUND_Armlet },
		// pluto 선물상자
		{ sinSP1 | sin05, "선물상자1", "SP105", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "SP105", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin06, "선물상자2", "SP106", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "SP105", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin07, "선물상자3", "SP107", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "SP105", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin08, "선물상자4", "SP108", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "SP105", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin09, "선물상자5", "SP109", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "SP105", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin10, "선물상자6", "SP110", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "SP105", 0, SIN_SOUND_Armlet },
		// 수박 아이템 추가	
		{ sinSP1 | sin15, "수박", "SP115", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP115", 0, SIN_SOUND_Armlet },
		//		{sinSP1|sin16  ,"커플링"			,"SP116",  ITEMSIZE*1, ITEMSIZE*1,"Event",ITEM_CLASS_ECORE,"SP116" ,0,SIN_SOUND_Armlet},

		// 박재원 - 밤하늘의 소원이벤트
		{ sinSP1 | sin26, "별", "SP126", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP126", 0, SIN_SOUND_Armlet },

		// 박재원 - 알파벳 조합 이벤트
		{ sinSP1 | sin27, "P", "SP127", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP127", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin28, "R", "SP128", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP128", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin29, "I", "SP129", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP129", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin30, "S", "SP130", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP130", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin31, "T", "SP131", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP131", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin32, "O", "SP132", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP132", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin33, "N", "SP133", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP133", 0, SIN_SOUND_Armlet },

		// 박재원 - 호랑이 캡슐 추가
		{ sinSP1 | sin34, "호랑이 캡슐", "SP134", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "SP134", 0, SIN_SOUND_Armlet },

		{ sinSP1 | sin35, "초콜릿", "SP135", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP135", 0, SIN_SOUND_Armlet },
		// 장별 - 캔디데이즈
		{ sinSP1 | sin36, "캔디", "SP136", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP136", 0, SIN_SOUND_Armlet },
		// 장별 - 매지컬그린
		{ sinSP1 | sin37, "비취", "SP137", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP137", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin38, "에메랄드", "SP138", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP138", 0, SIN_SOUND_Armlet },

		// 장별 - 카라의 눈물
		{ sinSP1 | sin39, "카라의 눈물", "SP139", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP139", 0, SIN_SOUND_Armlet },

		// 박재원 - 2010 월드컵 이벤트(축구공 포션)
		{ sinSP1 | sin40, "축구공 포션", "SP140", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP140", 0, SIN_SOUND_Armlet },

		// 장별 - 수박 아이템
		{ sinSP1 | sin42, "수박", "SP142", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SP142", 0, SIN_SOUND_Armlet },

		// 장별 - 영화 혈투
		{ sinSP1 | sin60, "영", "SP160", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP160", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin61, "화", "SP161", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP161", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin62, "혈", "SP162", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP162", 0, SIN_SOUND_Armlet },
		{ sinSP1 | sin63, "투", "SP163", ITEMSIZE, ITEMSIZE, "Event", ITEM_CLASS_ECORE, "SP163", 0, SIN_SOUND_Armlet },

		{ sinGP1 | sin01, "호피	  ", "GP101", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin02, "홉고블린 ", "GP102", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin03, "디코이   ", "GP103", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin04, "바곤     ", "GP104", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin05, "헤드커터 ", "GP105", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin06, "파이곤   ", "GP106", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin07, "킹호피   ", "GP107", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin08, "헐크     ", "GP108", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin09, "랜덤     ", "GP109", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL }, //랜덤 크리스탈
		{ sinGP1 | sin10, "클랜     ", "GP110", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL }, //클랜 크리스탈
		{ sinGP1 | sin11, "웹       ", "GP111", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL }, //클랜 크리스탈
		{ sinGP1 | sin12, "다크스팩터", "GP112", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL }, //클랜 크리스탈
		{ sinGP1 | sin13, "아이언가드", "GP113", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL }, //클랜 크리스탈	
		{ sinGP1 | sin14, "리카르덴 민병대", "GP114", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL }, //클랜 크리스탈
		{ sinGP1 | sin15, "리카르덴 경비대", "GP115", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL }, //클랜 크리스탈
		{ sinGP1 | sin16, "블레스왕국 수비대", "GP116", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL }, //클랜 크리스탈
		///요기에 추가되는 크리스탈을 넣는다 
		{ sinGP1 | sin17, "스켈레톤 크리스탈", "GP117", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin18, "게이아스 크리스탈", "GP118", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin19, "인페르나 크리스탈", "GP119", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		// pluto 익스트림 크리스탈 마벨 크리스탈 가디안 디바인
		{ sinGP1 | sin20, "익스트림 크리스탈", "GP120", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin21, "마벨 크리스탈", "GP121", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },
		{ sinGP1 | sin22, "가디안 디바인", "GP122", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP101", 0, SIN_SOUND_MAGICIAL },

		// 장별 - 소울스톤
		{ sinGP2 | sin01, "그린 소울스톤", "GP201", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP201", 0, SIN_SOUND_MAGICIAL },
		{ sinGP2 | sin02, "옐로우 소울스톤", "GP202", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP202", 0, SIN_SOUND_MAGICIAL },
		{ sinGP2 | sin03, "블루 소울스톤", "GP203", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP203", 0, SIN_SOUND_MAGICIAL },
		{ sinGP2 | sin04, "마젠타 소울스톤", "GP204", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP204", 0, SIN_SOUND_MAGICIAL },
		{ sinGP2 | sin05, "싸이언 소울스톤", "GP205", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP205", 0, SIN_SOUND_MAGICIAL },
		{ sinGP2 | sin06, "바이올렛 소울스톤", "GP206", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP206", 0, SIN_SOUND_MAGICIAL },
		{ sinGP2 | sin07, "레드 소울스톤", "GP207", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP207", 0, SIN_SOUND_MAGICIAL },
		{ sinGP2 | sin08, "블랙 소울스톤", "GP208", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP208", 0, SIN_SOUND_MAGICIAL },
		{ sinGP2 | sin09, "플래티넘 소울스톤", "GP209", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "GP209", 0, SIN_SOUND_MAGICIAL },


		{ sinQW1 | sin01, "윙1	          ", "QW101", ITEMSIZE * 2, ITEMSIZE * 2, "Wing", ITEM_CLASS_ECORE, "QW101", 0, SIN_SOUND_MAGICIAL }, //메탈
		{ sinQW1 | sin02, "윙2		      ", "QW102", ITEMSIZE * 2, ITEMSIZE * 2, "Wing", ITEM_CLASS_ECORE, "QW102", 0, SIN_SOUND_MAGICIAL }, //실버
		{ sinQW1 | sin03, "윙3			  ", "QW103", ITEMSIZE * 2, ITEMSIZE * 2, "Wing", ITEM_CLASS_ECORE, "QW103", 0, SIN_SOUND_MAGICIAL }, //골드
		{ sinQW1 | sin04, "윙4			  ", "QW104", ITEMSIZE * 2, ITEMSIZE * 2, "Wing", ITEM_CLASS_ECORE, "QW104", 0, SIN_SOUND_MAGICIAL }, //다이아
		{ sinQW1 | sin05, "윙5			  ", "QW105", ITEMSIZE * 2, ITEMSIZE * 2, "Wing", ITEM_CLASS_ECORE, "QW105", 0, SIN_SOUND_MAGICIAL }, //케이아스
		//로스트 아일랜드 성근 추가 
		{ sinQW1 | sin06, "윙6			  ", "QW106", ITEMSIZE * 2, ITEMSIZE * 2, "Wing", ITEM_CLASS_ECORE, "QW106", 0, SIN_SOUND_MAGICIAL }, //익스트림윙

		//Make Item (왼쪽)
		{ sinMA1 | sin01, "유리병           ", "MA101", ITEMSIZE * 2, ITEMSIZE * 2, "Make", ITEM_CLASS_QUEST, "MA101", 0, SIN_SOUND_MAGICIAL },

		//Make Item (오른쪽)
		{ sinMA2 | sin01, "벌꿀             ", "MA201", ITEMSIZE * 1, ITEMSIZE * 1, "Make", ITEM_CLASS_QUEST, "MA201", 0, SIN_SOUND_POTION },
		{ sinMA2 | sin02, "검은기름         ", "MA202", ITEMSIZE * 1, ITEMSIZE * 1, "Make", ITEM_CLASS_QUEST, "MA202", 0, SIN_SOUND_POTION },

		{ sinGF1 | sin01, "별상품권", "GF101", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_QUEST, "GF101", 0, SIN_SOUND_Armlet },
		//{sinGF1|sin02 ,"바벨상품권"			,"GF102",ITEMSIZE*2,ITEMSIZE*2,"Event",ITEM_CLASS_QUEST,"GF102",0,SIN_SOUND_Armlet},
		{ sinGF1 | sin03, "구미호목걸이1", "GF103", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_QUEST, "GF103", 0, SIN_SOUND_Armlet },
		{ sinGF1 | sin04, "구미호목걸이2", "GF104", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_QUEST, "GF104", 0, SIN_SOUND_Armlet },
		//반짝반짝 빛나는 가루 //크리스마스
		{ sinGF1 | sin05, "빛나는 가루", "GF105", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_QUEST, "GF105", 0, SIN_SOUND_Armlet },
		{ sinGF1 | sin06, "반짝   가루", "GF106", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_QUEST, "GF106", 0, SIN_SOUND_Armlet },

		// 장별 - 조사원을 찾아라
		{ sinGF1 | sin07, "나인아뮬렛", "GF107", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_QUEST, "GF107", 0, SIN_SOUND_Armlet },
		{ sinGF1 | sin08, "테일아뮬렛", "GF108", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_QUEST, "GF108", 0, SIN_SOUND_Armlet },

		//역겨운 진액 
		{ sinGF1 | sin02, "역겨운 진액", "GF102", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_QUEST, "GF102", 0, SIN_SOUND_POTION },


		//아이템 퍼즐 맞추기 이벤트  (끝날때꺼정 복주머니 인덱스 움지이면안됨)
		{ sinPZ1 | sin00, "복주머니", "PZ100", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "PZ100", 0, SIN_SOUND_Armlet },

		//Sod2 발생아이템  (인벤토리로 들어오지않고 실시간으로 사용된다)
		{ sinSD2 | sin01, "폭탄", "SD201", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SD201", 0, SIN_SOUND_Armlet },
		{ sinSD2 | sin02, "시계", "SD202", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SD202", 0, SIN_SOUND_Armlet },
		{ sinSD2 | sin03, "아이스크림", "SD203", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SD203", 0, SIN_SOUND_Armlet },
		{ sinSD2 | sin04, "토끼인형", "SD204", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SD204", 0, SIN_SOUND_Armlet },
		{ sinSD2 | sin05, "달의 수정구", "SD205", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SD205", 0, SIN_SOUND_Armlet },
		{ sinSD2 | sin06, "태양의 수정구", "SD206", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SD206", 0, SIN_SOUND_Armlet },
		{ sinSD2 | sin07, "천공의 수정구", "SD207", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "SD207", 0, SIN_SOUND_Armlet },

		{ sinBS1 | sin01, "벨라토스톤(소)", "BS101", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BS101", 0, SIN_SOUND_SHELTOM },
		{ sinBS1 | sin02, "벨라토스톤(중)", "BS102", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BS102", 0, SIN_SOUND_SHELTOM },
		{ sinBS1 | sin03, "벨라토스톤(대)", "BS103", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BS103", 0, SIN_SOUND_SHELTOM },

		//공성전 발생 아이템(스크롤)
		{ sinBC1 | sin01, "아타나시아", "BC101", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC101", 0, SIN_SOUND_Armlet },
		{ sinBC1 | sin02, "데들리 에지", "BC102", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC101", 0, SIN_SOUND_Armlet },
		{ sinBC1 | sin03, "어베일 오브 이베이드", "BC103", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC101", 0, SIN_SOUND_Armlet },
		{ sinBC1 | sin04, "볼스터 리커버리", "BC104", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC101", 0, SIN_SOUND_Armlet },
		{ sinBC1 | sin05, "리스토레이션", "BC105", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC101", 0, SIN_SOUND_Armlet },

		{ sinBC1 | sin06, "디파이언스 스톤", "BC106", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin07, "디파이언스 스톤", "BC107", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin08, "디파이언스 스톤", "BC108", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin09, "마이트 스톤", "BC109", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin10, "마이트 스톤", "BC110", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin11, "마이트 스톤", "BC111", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin12, "마이트 스톤", "BC112", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin13, "마이트 스톤", "BC113", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin14, "마이트 스톤", "BC114", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin15, "마이트 스톤", "BC115", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin16, "마이트 스톤", "BC116", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "BC102", 0, SIN_SOUND_SHELTOM },

		// 박재원 - 부스터 아이템(생명력, 기력, 근력)
		{ sinBC1 | sin21, "생명력 부스터(1시간)", "BC121", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC121", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin22, "생명력 부스터(3시간)", "BC122", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC122", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin23, "생명력 부스터(1일)", "BC123", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC123", 0, SIN_SOUND_SHELTOM },

		{ sinBC1 | sin24, "기력 부스터(1시간)", "BC124", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC124", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin25, "기력 부스터(3시간)", "BC125", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC125", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin26, "기력 부스터(1일)", "BC126", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC126", 0, SIN_SOUND_SHELTOM },

		{ sinBC1 | sin27, "근력 부스터(1시간)", "BC127", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC127", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin28, "근력 부스터(3시간)", "BC128", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC128", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin29, "근력 부스터(1일)", "BC129", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC129", 0, SIN_SOUND_SHELTOM },

		// 장별 - 스킬 딜레이
		{ sinBC1 | sin30, "스킬 딜레이(1시간)", "BC130", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC130", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin31, "스킬 딜레이(3시간)", "BC131", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC131", 0, SIN_SOUND_SHELTOM },
		{ sinBC1 | sin32, "스킬 딜레이(1일)", "BC132", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "BC132", 0, SIN_SOUND_SHELTOM },

		//프리미엄 부분 유료화 아이템========================================================================================== 
		{ sinBI1 | sin01, "블루 스톤", "BI101", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI101", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin02, "레드 스톤", "BI102", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI102", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin03, "그린 스톤", "BI103", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI103", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin04, "부활주문서", "BI104", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI104", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin05, "이터널 라이프", "BI105", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI105", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin06, "페이틀 에지", "BI106", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI106", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin07, "어버트 스크롤", "BI107", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI107", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin08, "텔레포트 코어", "BI108", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI108", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin09, "얼큰이 물약", "BI109", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI109", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin10, "에이징 스톤", "BI110", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI110", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin11, "코퍼 오어", "BI111", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI111", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin12, "써드 아이즈(1일)", "BI112", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI112", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin13, "경험치증가 포션(1일)", "BI113", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI113", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin14, "써드 아이즈(7일)", "BI114", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI114", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin15, "경험치증가 포션(7일)", "BI115", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI115", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin16, "헤어틴트 포션(A형)", "BI116", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI116", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin17, "헤어틴트 포션(B형)", "BI117", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI117", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin18, "헤어틴트 포션(C형)", "BI118", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI118", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin19, "뱀피릭 커스핏(15분)", "BI119", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI119", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin20, "뱀피릭 커스핏(30분)", "BI120", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI120", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin21, "마나 리차징 포션(15분)", "BI121", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI121", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin22, "마나 리차징 포션(30분)", "BI122", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI122", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin23, "폭 죽", "BI123", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI123", 0, SIN_SOUND_POTION },

		//==================== 베트남요청  경험치포션 ( 50 % ) ============= 성근 =================================================

		{ sinBI1 | sin24, "경험치증가 포션(50% 1일)", "BI124", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI124", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin25, "경험치증가 포션(50% 7일)", "BI125", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI125", 0, SIN_SOUND_POTION },

		// pluto 추가 캐쉬 아이템
		{ sinBI1 | sin26, "마이트 오브 아웰(7일)", "BI126", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI126", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin27, "마이트 오브 아웰(30일)", "BI127", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI127", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin28, "마나 리듀스 포션(1일)", "BI128", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI128", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin29, "마나 리듀스 포션(7일)", "BI129", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI129", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin30, "마이트 오브 아웰2(7일)", "BI130", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI130", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin31, "마이트 오브 아웰2(30일)", "BI131", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI131", 0, SIN_SOUND_POTION },
		// pluto 펫(해외)
		{ sinBI1 | sin32, "피닉스펫(1일)", "BI132", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI132", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin33, "피닉스펫(7일)", "BI133", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI132", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin34, "피닉스펫(3시간)", "BI134", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI132", 0, SIN_SOUND_POTION },

		//		{sinBI1|sin35 ,"수표(10000)"         ,"BI135",ITEMSIZE*2,ITEMSIZE*1,"Premium",ITEM_CLASS_ECORE,"BI135",0,SIN_SOUND_COIN},
		//		{sinBI1|sin36 ,"수표(100000)"        ,"BI136",ITEMSIZE*2,ITEMSIZE*1,"Premium",ITEM_CLASS_ECORE,"BI135",0,SIN_SOUND_COIN},
		//		{sinBI1|sin37 ,"수표(500000)"        ,"BI137",ITEMSIZE*2,ITEMSIZE*1,"Premium",ITEM_CLASS_ECORE,"BI135",0,SIN_SOUND_COIN},
		//		{sinBI1|sin38 ,"수표(1000000)"       ,"BI138",ITEMSIZE*2,ITEMSIZE*1,"Premium",ITEM_CLASS_ECORE,"BI135",0,SIN_SOUND_COIN},

		// 박재원 - 에이징 마스터 아이템 추가
		{ sinBI1 | sin36, "에이징 마스터(A)", "BI136", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI136", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin37, "에이징 마스터(B)", "BI137", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI137", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin38, "에이징 마스터(C)", "BI138", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI138", 0, SIN_SOUND_POTION },
		// 박재원 - 스킬 마스터 아이템 추가
		{ sinBI1 | sin39, "스킬 마스터(1차)", "BI139", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI139", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin40, "스킬 마스터(2차)", "BI140", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI140", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin41, "스킬 마스터(3차)", "BI141", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI141", 0, SIN_SOUND_POTION },
		// 박재원 - 이동 상점 아이템
		{ sinBI1 | sin42, "이동 상점", "BI142", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI142", 0, SIN_SOUND_POTION },
		// 박재원 - 경험치증가 포션(100% 1일, 7일 추가)
		{ sinBI1 | sin43, "경험치증가 포션(100% 1일)", "BI143", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI143", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin44, "경험치증가 포션(100% 7일)", "BI144", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI144", 0, SIN_SOUND_POTION },
		// 박재원 - 캐릭터 속성별 스탯 초기화 아이템(5종 - 힘, 정신력, 재능, 민첩성, 건강)
		{ sinBI1 | sin45, "힘 스톤", "BI145", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI145", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin46, "정신 스톤", "BI146", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI146", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin47, "재능 스톤", "BI147", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI147", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin48, "민첩성 스톤", "BI148", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI148", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin49, "건강 스톤", "BI149", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI149", 0, SIN_SOUND_SHELTOM },
		// 박재원 - 경험치증가 포션(100% 1일, 30일 추가)
		{ sinBI1 | sin50, "경험치증가 포션(100% 30일)", "BI150", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI150", 0, SIN_SOUND_POTION },
		// 박재원 - 픽닉스 펫(30일) 추가
		{ sinBI1 | sin51, "피닉스펫(30일)", "BI151", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI151", 0, SIN_SOUND_POTION },
		// 박재원 - 빌링 도우미 펫 추가
		{ sinBI1 | sin52, "테리(30일)", "BI152", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI152", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin53, "넵시스(30일)", "BI153", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI153", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin54, "이오(30일)", "BI154", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI154", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin55, "무트(30일)", "BI155", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI155", 0, SIN_SOUND_POTION },

		// 박재원 - 엘더 코퍼 오어, 슈퍼 에이징 스톤 추가
		{ sinBI1 | sin60, "엘더 코퍼 오어", "BI160", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI160", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin61, "슈퍼 에이징 스톤", "BI161", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI161", 0, SIN_SOUND_SHELTOM },

		// 박재원 - 에이징 마스터(2차) 아이템 추가
		{ sinBI1 | sin62, "에이징 마스터(D)", "BI162", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI162", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin63, "에이징 마스터(E)", "BI163", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI163", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin64, "에이징 마스터(F)", "BI164", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI164", 0, SIN_SOUND_POTION },

		// 장별 - 빌링 도우미 펫 추가(7일)
		{ sinBI1 | sin65, "테리(7일)", "BI165", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI165", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin66, "넵시스(7일)", "BI166", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI166", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin67, "이오(7일)", "BI167", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI167", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin68, "무트(7일)", "BI168", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI168", 0, SIN_SOUND_POTION },


		// 장별 - 빌링 도우미 펫 추가
		{ sinBI1 | sin69, "테리(1일)", "BI169", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI169", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin70, "넵시스(1일)", "BI170", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI170", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin71, "이오(1일)", "BI171", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI171", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin72, "무트(1일)", "BI172", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI172", 0, SIN_SOUND_POTION },

		{ sinBI1 | sin73, "테리(1시간)", "BI173", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI173", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin74, "넵시스(1시간)", "BI174", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI174", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin75, "이오(1시간)", "BI175", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI175", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin76, "무트(1시간)", "BI176", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI176", 0, SIN_SOUND_POTION },

		// 장별 - 피닉스펫(1시간)
		{ sinBI1 | sin77, "피닉스펫(1시간)", "BI177", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI177", 0, SIN_SOUND_POTION },

		// 장별 - 써드 아이즈
		{ sinBI1 | sin78, "써드 아이즈(1시간)", "BI178", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI178", 0, SIN_SOUND_SHELTOM },

		// 장별 - 경험치증가포션(1시간)
		{ sinBI1 | sin79, "경험치증가 포션(1시간)", "BI179", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI179", 0, SIN_SOUND_POTION },

		// 장별 - 경험치증가 포션(100% 1시간)
		{ sinBI1 | sin80, "경험치 2배 증가약(1시간)", "BI180", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI180", 0, SIN_SOUND_POTION },

		// 장별 - 뱀피릭 커스핏(1시간)
		{ sinBI1 | sin81, "뱀피릭 커스핏(1시간)", "BI181", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI181", 0, SIN_SOUND_POTION },

		// 장별 - 마나 리차징 포션(1시간)
		{ sinBI1 | sin82, "마나 리차징 포션(1시간)", "BI182", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI182", 0, SIN_SOUND_POTION },

		// 장별 - 마나 리듀스(1시간)
		{ sinBI1 | sin83, "마나 리듀스 포션(1시간)", "BI183", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI183", 0, SIN_SOUND_POTION },

		// 장별 - 그라비티 스크롤
		{ sinBI1 | sin84, "그라비티 스톤", "BI184", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI184", 0, SIN_SOUND_POTION },

		// 장별 - 슈퍼 에이징 스톤 1.5
		{ sinBI1 | sin85, "슈페리어 코퍼오어", "BI185", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI185", 0, SIN_SOUND_SHELTOM },

		// 장별 - 뱀피릭 커스핏 EX
		{ sinBI1 | sin86, "슈퍼 뱀피릭 커스핏(1시간)", "BI186", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI186", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin87, "슈퍼 뱀피릭 커스핏(3시간)", "BI187", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI187", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin88, "슈퍼 뱀피릭 커스핏(1일)", "BI188", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI188", 0, SIN_SOUND_POTION },

		// 석지용 - 믹스쳐 리셋 스톤
		{ sinBI1 | sin89, "믹스쳐 리셋 스톤", "BI189", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI189", 0, SIN_SOUND_SHELTOM },

		// 박재원 - 리스펙 스톤
		{ sinBI1 | sin90, "리스펙 스톤", "BI190", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI190", 0, SIN_SOUND_POTION },

		// 박재원 - 근력 리듀스 폰션(1일, 7일)
		{ sinBI1 | sin91, "근력 리듀스 포션(1일)", "BI191", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI191", 0, SIN_SOUND_POTION },
		{ sinBI1 | sin92, "근력 리듀스 포션(7일)", "BI192", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI192", 0, SIN_SOUND_POTION },

		// 석지용 - 필드 코어
		{ sinBI1 | sin93, "필드 코어(1일)", "BI193", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI193", 0, SIN_SOUND_SHELTOM },
		{ sinBI1 | sin94, "필드 코어(7일)", "BI194", ITEMSIZE * 2, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI194", 0, SIN_SOUND_SHELTOM },


		//========= 패키지 캐쉬 아이템============성근추가060515=====================================================================

		{ sinBI2 | sin01, "Bronze Package(3시간)", "BI201", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI201", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin02, "Bronze Package(1일)", "BI202", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI202", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin03, "Bronze Package(7일)", "BI203", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI203", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin04, "Bronze Package(30일)", "BI204", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI204", 0, SIN_SOUND_SHELTOM },

		{ sinBI2 | sin05, "Siver Package(3시간)", "BI205", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI205", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin06, "Siver Package(1일)", "BI206", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI206", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin07, "Siver Package(7일)", "BI207", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI207", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin08, "Siver Package(30일)", "BI208", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI208", 0, SIN_SOUND_SHELTOM },

		{ sinBI2 | sin09, "Gold Package(3시간)", "BI209", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI209", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin10, "Gold Package(1일)", "BI210", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI210", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin11, "Gold Package(7일)", "BI211", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI211", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin12, "Gold Package(30일)", "BI212", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI212", 0, SIN_SOUND_SHELTOM },

		//===========2차 헤어 포션 ================성근추가060524 ========================================================================

		{ sinBI2 | sin13, "헤어틴트 포션(D형)", "BI213", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI213", 0, SIN_SOUND_POTION },
		{ sinBI2 | sin14, "헤어틴트 포션(E형)", "BI214", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI214", 0, SIN_SOUND_POTION },
		{ sinBI2 | sin15, "헤어틴트 포션(F형)", "BI215", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI215", 0, SIN_SOUND_POTION },
		{ sinBI2 | sin16, "헤어틴트 포션(G형)", "BI216", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI216", 0, SIN_SOUND_POTION },
		{ sinBI2 | sin17, "헤어틴트 포션(H형)", "BI217", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI217", 0, SIN_SOUND_POTION },

		//===========3차 헤어 포션 ================성근추가060809 ========================================================================

		{ sinBI2 | sin18, "헤어틴트 포션(I형)", "BI218", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI218", 0, SIN_SOUND_POTION },
		{ sinBI2 | sin19, "헤어틴트 포션(J형)", "BI219", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI219", 0, SIN_SOUND_POTION },
		{ sinBI2 | sin20, "헤어틴트 포션(K형)", "BI220", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI220", 0, SIN_SOUND_POTION },
		{ sinBI2 | sin21, "헤어틴트 포션(L형)", "BI221", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI221", 0, SIN_SOUND_POTION },
		{ sinBI2 | sin22, "헤어틴트 포션(M형)", "BI222", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI222", 0, SIN_SOUND_POTION },
		// pluto 추가 캐쉬 아이템
		{ sinBI2 | sin23, "Superior Package(3시간)", "BI223", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI223", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin24, "Superior Package(1일)", "BI224", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI224", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin25, "Superior Package(7일)", "BI225", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI225", 0, SIN_SOUND_SHELTOM },

		{ sinBI2 | sin26, "Bronze Package2(3시간)", "BI226", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI226", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin27, "Bronze Package2(1일)", "BI227", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI227", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin28, "Bronze Package2(7일)", "BI228", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI228", 0, SIN_SOUND_SHELTOM },

		{ sinBI2 | sin29, "Siver Package2(3시간)", "BI229", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI229", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin30, "Siver Package2(1일)", "BI230", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI230", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin31, "Siver Package2(7일)", "BI231", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI231", 0, SIN_SOUND_SHELTOM },

		{ sinBI2 | sin32, "Gold Package2(3시간)", "BI232", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI232", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin33, "Gold Package2(1일)", "BI233", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI233", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin34, "Gold Package2(7일)", "BI234", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI234", 0, SIN_SOUND_SHELTOM },

		{ sinBI2 | sin35, "Superior Package2(3시간)", "BI235", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI235", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin36, "Superior Package2(1일)", "BI236", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI236", 0, SIN_SOUND_SHELTOM },
		{ sinBI2 | sin37, "Superior Package2(7일)", "BI237", ITEMSIZE * 1, ITEMSIZE * 1, "Premium", ITEM_CLASS_ECORE, "BI237", 0, SIN_SOUND_SHELTOM },

		//유니크
		{ sinOR2 | sin05, "발렌토 링", "OR205", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_RING, "or205", 0, SIN_SOUND_RING },


		//무기류 퍼즐
		{ sinPZ1 | sin01, "퍼즐1", "PZ101", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ1 | sin02, "퍼즐2", "PZ102", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ1 | sin03, "퍼즐3", "PZ103", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ1 | sin04, "퍼즐4", "PZ104", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ1 | sin05, "퍼즐5", "PZ105", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ1 | sin06, "퍼즐6", "PZ106", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ1 | sin07, "퍼즐7", "PZ107", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ1 | sin08, "퍼즐8", "PZ108", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },

		//방어구 퍼즐
		{ sinPZ2 | sin01, "퍼즐1", "PZ201", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ2 | sin02, "퍼즐2", "PZ202", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ2 | sin03, "퍼즐3", "PZ203", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ2 | sin04, "퍼즐4", "PZ204", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ2 | sin05, "퍼즐5", "PZ205", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ2 | sin06, "퍼즐6", "PZ206", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ2 | sin07, "퍼즐7", "PZ207", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },
		{ sinPZ2 | sin08, "퍼즐8", "PZ208", ITEMSIZE * 2, ITEMSIZE * 1, "Event", ITEM_CLASS_ECORE, "PZ101", 0, SIN_SOUND_Armlet },

		//발렌타인데이 초콜릿 & 화이트데이 사탕
		{ sinCH1 | sin01, "초콜렛1", "CH101", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "CH101", 0, SIN_SOUND_Armlet },
		{ sinCH1 | sin02, "초콜렛2", "CH102", ITEMSIZE * 2, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "CH102", 0, SIN_SOUND_Armlet },
		{ sinCH1 | sin03, "사탕1", "CH103", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "CH103", 0, SIN_SOUND_Armlet },
		{ sinCH1 | sin04, "사탕2", "CH104", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "CH104", 0, SIN_SOUND_Armlet },

		//Seel (아이템 재구성)                                               
		{ sinSE1 | sin01, "제라", "SE101", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SEEL, "SE101", 0, SIN_SOUND_SHELTOM },
		{ sinSE1 | sin02, "니이드", "SE102", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SEEL, "SE102", 0, SIN_SOUND_SHELTOM },
		{ sinSE1 | sin03, "지푸", "SE103", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SEEL, "SE103", 0, SIN_SOUND_SHELTOM },
		// 박재원 - 테이와즈 씰 추가
		{ sinSE1 | sin04, "테이와즈", "SE104", ITEMSIZE * 1, ITEMSIZE * 1, "Accessory", ITEM_CLASS_SEEL, "SE104", 0, SIN_SOUND_SHELTOM },

		{ sinPR1 | sin01, "보라빛 광석", "PR101", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR101", 0, SIN_SOUND_SHELTOM },
		{ sinPR1 | sin02, "은빛 광석", "PR102", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR102", 0, SIN_SOUND_SHELTOM },
		{ sinPR1 | sin03, "금빛 광석", "PR103", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR103", 0, SIN_SOUND_SHELTOM },
		{ sinPR1 | sin04, "하늘빛 광석", "PR104", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR104", 0, SIN_SOUND_SHELTOM },
		{ sinPR1 | sin05, "남빛 광석", "PR105", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR105", 0, SIN_SOUND_SHELTOM },
		{ sinPR1 | sin06, "주황빛 광석", "PR106", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR106", 0, SIN_SOUND_SHELTOM },
		{ sinPR1 | sin07, "붉은빛 광석", "PR107", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR107", 0, SIN_SOUND_SHELTOM },
		{ sinPR1 | sin08, "초록빛 광석", "PR108", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR108", 0, SIN_SOUND_SHELTOM },

		{ sinPR2 | sin01, "보라빛 수정", "PR201", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR201", 0, SIN_SOUND_SHELTOM },
		{ sinPR2 | sin02, "은빛 수정", "PR202", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR202", 0, SIN_SOUND_SHELTOM },
		{ sinPR2 | sin03, "금빛 수정", "PR203", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR203", 0, SIN_SOUND_SHELTOM },
		{ sinPR2 | sin04, "하늘빛 수정", "PR204", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR204", 0, SIN_SOUND_SHELTOM },
		{ sinPR2 | sin05, "남빛 수정", "PR205", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR205", 0, SIN_SOUND_SHELTOM },
		{ sinPR2 | sin06, "주황빛 수정", "PR206", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR206", 0, SIN_SOUND_SHELTOM },
		{ sinPR2 | sin07, "붉은빛 수정", "PR207", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR207", 0, SIN_SOUND_SHELTOM },
		{ sinPR2 | sin08, "초록빛 수정", "PR208", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR208", 0, SIN_SOUND_SHELTOM },
		{ sinPR2 | sin09, "눈의 결정", "PR209", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR209", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR2 | sin10, "스노우플라워", "PR210", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR210", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR2 | sin11, "하얀 눈물", "PR211", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR211", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR2 | sin12, "녹슨 수정", "PR212", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR212", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼
		{ sinPR2 | sin13, "원석 조각", "PR213", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR213", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼
		{ sinPR2 | sin14, "검은빛 수정", "PR214", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR214", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼

		{ sinPR3 | sin01, "보라빛 룬(A)", "PR301", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR301", 0, SIN_SOUND_SHELTOM },
		{ sinPR3 | sin02, "은빛 룬(A)", "PR302", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR302", 0, SIN_SOUND_SHELTOM },
		{ sinPR3 | sin03, "금빛 룬(A)", "PR303", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR303", 0, SIN_SOUND_SHELTOM },
		{ sinPR3 | sin04, "하늘빛 룬(A)", "PR304", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR304", 0, SIN_SOUND_SHELTOM },
		{ sinPR3 | sin05, "남빛 룬(A)", "PR305", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR305", 0, SIN_SOUND_SHELTOM },
		{ sinPR3 | sin06, "주황빛 룬(A)", "PR306", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR306", 0, SIN_SOUND_SHELTOM },
		{ sinPR3 | sin07, "붉은빛 룬(A)", "PR307", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR307", 0, SIN_SOUND_SHELTOM },
		{ sinPR3 | sin08, "초록빛 룬(A)", "PR308", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR308", 0, SIN_SOUND_SHELTOM },
		{ sinPR3 | sin09, "스노우 룬(A)", "PR309", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR309", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR3 | sin10, "플라워 룬(A)", "PR310", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR310", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR3 | sin11, "화이트 룬(A)", "PR311", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR311", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR3 | sin12, "일루젼 룬(A)", "PR312", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR312", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼
		{ sinPR3 | sin13, "아이디얼 룬(A)", "PR313", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR313", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼
		{ sinPR3 | sin14, "브레이크 룬(A)", "PR314", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR314", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼

		{ sinPR4 | sin01, "보라빛 룬(B)", "PR401", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR401", 0, SIN_SOUND_SHELTOM },
		{ sinPR4 | sin02, "은빛 룬(B)", "PR402", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR402", 0, SIN_SOUND_SHELTOM },
		{ sinPR4 | sin03, "금빛 룬(B)", "PR403", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR403", 0, SIN_SOUND_SHELTOM },
		{ sinPR4 | sin04, "하늘빛 룬(B)", "PR404", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR404", 0, SIN_SOUND_SHELTOM },
		{ sinPR4 | sin05, "남빛 룬(B)", "PR405", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR405", 0, SIN_SOUND_SHELTOM },
		{ sinPR4 | sin06, "주황빛 룬(B)", "PR406", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR406", 0, SIN_SOUND_SHELTOM },
		{ sinPR4 | sin07, "붉은빛 룬(B)", "PR407", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR407", 0, SIN_SOUND_SHELTOM },
		{ sinPR4 | sin08, "초록빛 룬(B)", "PR408", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR408", 0, SIN_SOUND_SHELTOM },
		{ sinPR4 | sin09, "스노우 룬(B)", "PR409", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR409", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR4 | sin10, "플라워 룬(B)", "PR410", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR410", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR4 | sin11, "화이트 룬(B)", "PR411", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR411", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinPR4 | sin12, "일루젼 룬(B)", "PR412", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR412", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼
		{ sinPR4 | sin13, "아이디얼 룬(B)", "PR413", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR413", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼
		{ sinPR4 | sin14, "브레이크 룬(B)", "PR414", ITEMSIZE * 1, ITEMSIZE * 1, "Event", ITEM_CLASS_SEEL, "PR414", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼

		{ sinWR1 | sin01, "잊혀진 무기 제작서", "WR101", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR101", 0, SIN_SOUND_SHELTOM },
		{ sinWR1 | sin02, "고대의 무기 제작서", "WR102", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR102", 0, SIN_SOUND_SHELTOM },
		{ sinWR1 | sin03, "대지의 무기 제작서", "WR103", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR103", 0, SIN_SOUND_SHELTOM },
		{ sinWR1 | sin04, "어둠의 무기 제작서", "WR104", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR104", 0, SIN_SOUND_SHELTOM },
		{ sinWR1 | sin05, "화염의 무기 제작서", "WR105", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR105", 0, SIN_SOUND_SHELTOM },
		{ sinWR1 | sin06, "바람의 무기 제작서", "WR106", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR106", 0, SIN_SOUND_SHELTOM },
		{ sinWR1 | sin07, "태양의 무기 제작서", "WR107", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR107", 0, SIN_SOUND_SHELTOM },
		{ sinWR1 | sin08, "광포한 무기 제작서", "WR108", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR108", 0, SIN_SOUND_SHELTOM },
		{ sinWR1 | sin09, "천상의 무기 제작서", "WR109", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "WR109", 0, SIN_SOUND_SHELTOM },

		{ sinDR1 | sin01, "잊혀진 방어구 제작서", "DR101", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR101", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin02, "고대의 방어구 제작서", "DR102", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR102", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin03, "대지의 방어구 제작서", "DR103", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR103", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin04, "어둠의 방어구 제작서", "DR104", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR104", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin05, "화염의 방어구 제작서", "DR105", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR105", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin06, "바람의 방어구 제작서", "DR106", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR106", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin07, "태양의 방어구 제작서", "DR107", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR107", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin08, "광포한 방어구 제작서", "DR108", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR108", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin09, "천상의 방어구 제작서", "DR109", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR109", 0, SIN_SOUND_SHELTOM },
		{ sinDR1 | sin10, "포설의 제작서", "DR110", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR110", 0, SIN_SOUND_SHELTOM }, // 장별
		{ sinDR1 | sin11, "기억의 제작서", "DR111", ITEMSIZE * 1, ITEMSIZE * 2, "Event", ITEM_CLASS_ECORE, "DR111", 0, SIN_SOUND_SHELTOM }, // 장별 - 대장장이의 혼

		//돈 젤루 마지막에 넣어야한다 (왜인지는 기억이 안나네 ........)
		{sinGG1|sin01  ,"Gold"  ,"GG101",  ITEMSIZE*1, ITEMSIZE*1,"Gold",  0   ,"DRCOIN" , 0 ,SIN_SOUND_COIN}, 
		{sinGG1|sin02  ,"Exp"   ,"GG102",  ITEMSIZE*1, ITEMSIZE*1,"Exp" ,  0   ,"DRExp" , 0  ,SIN_SOUND_MAGICIAL}, 

};
/*----------------------------------------------------------------------------*
*							클래스 초기, 종료  
*-----------------------------------------------------------------------------*/	
cITEM::cITEM()
{

}

cITEM::~cITEM()
{

}
/*----------------------------------------------------------------------------*
*							    초기화 
*-----------------------------------------------------------------------------*/	
void cITEM::Init()
{
	for(int cnt=0;cnt<MAX_ITEM;cnt++)//�ڵ带 �����Ѵ� 
		sItem[cnt].sItemInfo.CODE = sItem[cnt].CODE;

	MatItemInfoBox = CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 

	MatItemInfoBox_TopLeft		= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxTopLeft.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 
	MatItemInfoBox_TopRight		= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxTopRight.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 
	MatItemInfoBox_TopCenter	= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxTopCenter.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 

	MatItemInfoBox_BottomLeft	= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxBottomLeft.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 
	MatItemInfoBox_BottomRight	= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxBottomRight.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 
	MatItemInfoBox_BottomCenter	= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxBottomCenter.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 

	MatItemInfoBox_Left			= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxLeft.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 
	MatItemInfoBox_Right		= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxRight.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 
	MatItemInfoBox_Center		= CreateTextureMaterial( "Image\\SinImage\\Items\\ItemInfoBox\\BoxCenter.tga" , 0, 0, 0,0, SMMAT_BLEND_ALPHA ); 

	Load();


	int CheckCount = 0;
	while(1)
	{
		//////////////////////�ȼ����� ������ ���
		if(NotSell_Item_CODE[NotSell_Item_CODECnt]) 
			NotSell_Item_CODECnt++;
		else 
			CheckCount++;

		if(NotSell_Item_MASK[NotSell_Item_MASKCnt])
			NotSell_Item_MASKCnt++;
		else 
			CheckCount++;

		if(NotSell_Item_KIND[NotSell_Item_KINDCnt])
			NotSell_Item_KINDCnt++;
		else 
			CheckCount++;

		//////////////////////���������� �����۸��
		if(NotDrow_Item_CODE[NotDrow_Item_CODECnt]) 
			NotDrow_Item_CODECnt++;
		else 
			CheckCount++;

		if(NotDrow_Item_MASK[NotDrow_Item_MASKCnt])
			NotDrow_Item_MASKCnt++;
		else 
			CheckCount++;

		if(NotDrow_Item_KIND[NotDrow_Item_KINDCnt])
			NotDrow_Item_KINDCnt++;
		else 
			CheckCount++;

		//////////////////////�����Ҽ����� �����۸��
		if(NotSet_Item_CODE[NotSet_Item_CODECnt]) 
			NotSet_Item_CODECnt++;
		else 
			CheckCount++;

		if(NotSet_Item_MASK[NotSet_Item_MASKCnt])
			NotSet_Item_MASKCnt++;
		else 
			CheckCount++;

		if(NotSet_Item_KIND[NotSet_Item_KINDCnt])
			NotSet_Item_KINDCnt++;
		else 
			CheckCount++;

		if(CheckCount >= 9)
			break;

	}
	// pluto ���� ������ ���� ���� �ʱ�ȭ
	memset( g_Manufacture_ItemInfo, 0, sizeof(SManufacture_ResultItemInfo) );
}
/*----------------------------------------------------------------------------*
*						    Bmp파일을 로드한다 
*-----------------------------------------------------------------------------*/	
void cITEM::Load()
{
	AgingBar	= LoadDibSurfaceOffscreen("image\\Sinimage\\shopall\\Aging\\Bar.bmp");
	AgingGage	= LoadDibSurfaceOffscreen("image\\Sinimage\\shopall\\Aging\\Bar_.bmp");
	AgingBar2	= LoadDibSurfaceOffscreen("image\\Sinimage\\shopall\\Aging\\Aging.bmp");	
}
/*----------------------------------------------------------------------------*
*						     Release
*-----------------------------------------------------------------------------*/	
void cITEM::Release()
{
	if(AgingBar)
	{
		AgingBar->Release();
		AgingBar = 0;
	}
	if(AgingGage)
	{
		AgingGage->Release();
		AgingGage = 0;
	}
	if(AgingBar2)
	{
		AgingBar2->Release();
		AgingBar2 =0;
	}
}
/*----------------------------------------------------------------------------*
*							     그리기  
*-----------------------------------------------------------------------------*/	
void cITEM::Draw()
{
	int t=0,i =0; 
	char TempBuff[64];
	int len=0,len2=0;
	int tSetTextXposi=0;
	int x,y;
	len= lstrlen(szInfoBuff);

	memset(&TempBuff,0,sizeof(TempBuff));
	for( i = 0 ; i < len ; i++)
	{
		if(szInfoBuff[i] == '\r')
		{
			memcpy(TempBuff,szInfoBuff,i);
			break;
		}

	}
	len2 = lstrlen(TempBuff); 
	tSetTextXposi = (int)(ItemBoxPosi.x + (((ItemBoxSize.x*16)/2)- ((len2*5.5)/2))+(len2*5.5));

	if(MouseItem.Flag)
	{        
		if(!MouseItem.lpItem)
			dsDrawColorBox( RGBA_MAKE(125,125,255,125) ,MouseItem.x ,MouseItem.y,MouseItem.w ,MouseItem.h); 

		x = pCursorPos.x-(MouseItem.w/2);
		y = pCursorPos.y -(MouseItem.h/2);

		dsDrawOffsetArray = dsARRAY_TOP;
		DrawSprite(x , y , MouseItem.lpItem,0,0,MouseItem.w,MouseItem.h);
		if((MouseItem.sItemInfo.CODE & sinITEM_MASK2) == sinPZ1 || (MouseItem.sItemInfo.CODE & sinITEM_MASK2) == sinPZ2)
		{
			if(MouseItem.sItemInfo.PotionCount == 2)
			{
				if(MouseItem.w == 44 )
					DrawSprite(x , y , cInvenTory.lpPuzzlewidth,0,0,44,22);
				if(MouseItem.w == 22 )
					DrawSprite(x , y, cInvenTory.lpPuzzleHeight,0,0,22,44);	
			}
		}

		if(cMyShop.OpenFlag)
			dsDrawColorBox( RGBA_MAKE(0,0,128,125) ,x ,y,MouseItem.w ,MouseItem.h); 
	}

	if(sinShowItemInfoFlag)
	{ 
		if(sinShowItemInfoFlag == 1)dsDrawOffsetArray = dsARRAY_TOP;
		else dsDrawOffsetArray = dsARRAY_BOTTOM;
		for(i = 0; i < ItemBoxSize.x ; i++)
		{
			for(int j = 0; j< ItemBoxSize.y ; j++)
			{
				if(i == 0 && j == 0 ) //������� 
					dsDrawTexImage( MatItemInfoBox_TopLeft , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );
				if(j == 0 && i !=0 && i+1 < ItemBoxSize.x ) //���
					dsDrawTexImage( MatItemInfoBox_TopCenter , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );
				if(j == 0 && i+1 == ItemBoxSize.x) //�������
					dsDrawTexImage( MatItemInfoBox_TopRight , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );
				if(i == 0 && j != 0 && j+1 != ItemBoxSize.y) //���� �ٰŸ� 
					dsDrawTexImage( MatItemInfoBox_Left , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );
				if(i != 0 && j != 0 && i+1 !=ItemBoxSize.x && j+1 !=ItemBoxSize.y) //��� �丷
					dsDrawTexImage( MatItemInfoBox_Center , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );
				if(i+1 == ItemBoxSize.x && j != 0 && j+1 != ItemBoxSize.y) //���� �ٰŸ� 
					dsDrawTexImage( MatItemInfoBox_Right , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );				
				if(i == 0 && j+1 == ItemBoxSize.y) //�عٴ� ����
					dsDrawTexImage( MatItemInfoBox_BottomLeft , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );
				if(i != 0 && j+1 == ItemBoxSize.y && i+1 !=ItemBoxSize.x)//�عٴ� ���
					dsDrawTexImage( MatItemInfoBox_BottomCenter , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );
				if(j+1 == ItemBoxSize.y && i+1 ==ItemBoxSize.x)//�عٴ� ������ 
					dsDrawTexImage( MatItemInfoBox_BottomRight , ItemBoxPosi.x+(i*16) , ItemBoxPosi.y+(j*16), 16, 16 , 255 );
			}
		}

		//�ڽ� ũ�� �׽�Ʈ
		//dsDrawTexImage( MatItemInfoBox_TopCenter , ItemBoxPosi.x , ItemBoxPosi.y, 158, 100 , 255 ); 
 
		if(tWeaponClass == 1)
			DrawSprite(tSetTextXposi , ItemBoxPosi.y+8 , cInvenTory.lpShowWeaponClass[0] ,0,0,18,16);

		if(tWeaponClass == 2)
			DrawSprite(tSetTextXposi , ItemBoxPosi.y+8  , cInvenTory.lpShowWeaponClass[1] ,0,0,18,16);

		if(tWeaponClass == 3)
			DrawSprite(tSetTextXposi , ItemBoxPosi.y+8 , cInvenTory.lpShowWeaponClass[2] ,0,0,18,16);

		if(tWeaponClass == 4)
			DrawSprite(tSetTextXposi , ItemBoxPosi.y+8  , cInvenTory.lpShowWeaponClass[3] ,0,0,18,16);

		if(AgingGageFlag)
		{
			if(AgingGageFlag == 1)
				DrawSprite(ItemBoxPosi.x+14 , ItemBoxPosi.y+30  , AgingBar ,0,0,130,19);
			if(AgingGageFlag ==2)
				DrawSprite(ItemBoxPosi.x+14+53 , ItemBoxPosi.y+30  , AgingBar2 ,0,0,23,19);
			if(AgingBarLenght)
				DrawSprite(ItemBoxPosi.x+16 , ItemBoxPosi.y+37  , AgingGage ,0,0,AgingBarLenght,4);
		}
	}
}
/*----------------------------------------------------------------------------*
*							     메인  
*-----------------------------------------------------------------------------*/	
void cITEM::Main()
{
	
	sinShowItemInfoFlag = 0; //������ ������ġ�ΰ����� �ʱ�ȭ���ش�  
	if(MouseItem.Flag)   //�������� ��ġ ����
	{
		if(!sinMessageBoxShowFlag)
		{
			MouseItem.x = pCursorPos.x-(MouseItem.w/2);
			MouseItem.y = pCursorPos.y -(MouseItem.h/2);
		}
	
	}
	if(cMyShop.OpenFlag)
	{
		if(MyShopMouseItem.Flag)
		{
			MyShopMouseItem.x = pCursorPos.x-(MyShopMouseItem.w/2);
			MyShopMouseItem.y = pCursorPos.y -(MyShopMouseItem.h/2);
		}
	}
	///////������ ���̺� ������ �����Ѵ� 10�ʿ� �ѹ� üũ 
	CheckItemTable();

}

void cITEM::GetMousePos(int *MouseX , int *MouseY)
{
	if(MouseItem.Flag){    //�������� ��ġ ���� 
		if(!sinMessageBoxShowFlag){
			*MouseX = pCursorPos.x-(MouseItem.w/2);
			*MouseY = pCursorPos.y -(MouseItem.h/2);
		}
	}
	if(cMyShop.OpenFlag){
		if(MyShopMouseItem.Flag){
			*MouseX = pCursorPos.x-(MyShopMouseItem.w/2);
			*MouseY = pCursorPos.y -(MyShopMouseItem.h/2);
		}
	}
	///////������ ���̺� ������ �����Ѵ� 10�ʿ� �ѹ� üũ 
}
/*----------------------------------------------------------------------------*
*							     종료 
*-----------------------------------------------------------------------------*/	
void cITEM::Close()
{

}
/*----------------------------------------------------------------------------*
*							   LButtonDown
*-----------------------------------------------------------------------------*/	
void cITEM::LButtonDown(int x , int y)
{
/*
	if(MouseItem.Flag){    //�������� ��ġ ���� 
		CursorClass = 0; //���콺 Ŀ���� ���ش� 
	}
	else{
		CursorClass = 1;

	}
*/
}
/*----------------------------------------------------------------------------*
*							   LButtonUp
*-----------------------------------------------------------------------------*/	
void cITEM::LButtonUp(int x , int y)
{

}
/*----------------------------------------------------------------------------*
*							   RButtonDown
*-----------------------------------------------------------------------------*/	
void cITEM::RButtonDown(int x , int y)
{
	if(!MouseItem.Flag)
		CursorClass = 1; //Default Ŀ���� �����Ѵ� 
}
/*----------------------------------------------------------------------------*
*							   RButtonUp
*-----------------------------------------------------------------------------*/	
void cITEM::RButtonUp(int x , int y)
{

}
/*----------------------------------------------------------------------------*
*							    KeyDown
*-----------------------------------------------------------------------------*/	
void cITEM::KeyDown()
{

}

int sinLineCount = 0;
int RedLine[10] = {0,0,0,0,0,0,0,0,0,0};
int SpecialItemLine = 0;
int CountSpecialName = 0;  //Ưȭ�� ���� ĳ���Ϳ� �ش�ɶ� ����Ѵ� 
int   ItemInfoCol=0; //�������� �ټ�
int UniFlag = 0; //����ũ �������� üũ�Ѵ� 
DWORD sinItemKindFlag = 0; //�������� ������ üũ�Ѵ�
sITEMINFO sInfo;
sITEMPRICE sinItemPrice;


int RequireLine[10] = {0,0,0,0,0,0,0,0,0};
int MixItemLine[10] = {0,0,0,0,0,0,0,0,0,0};
int AgingItemLine[10]={0,0,0,0,0,0,0,0,0,0};
int AgingLevel4 = 0;
int QuestItemLine = 0;
int MyShopItemPriceLine = 0;
//�������� ������ �����ش� 

int cITEM::ShowItemInfo(sITEM *pItem ,int Flag,int Index)
{
	int   cnt = 0;
	int   BlockRate = 0;
	int   sinSpeed  = 0; 
	int   sinAbsorb = 0;
	int   sinLeftSpot = 0;
	int   sinRightSpot= 0;
	int   sinRegen = 0;

	char	szTemp[64];
	char    szTemp2[64];
	tWeaponClass = 0;
	AgingGageFlag = 0;
	AgingBarLenght = 0;
	AgingLevel4 = 0;
	QuestItemLine = 0;

	int AgingCnt = 0;

	UniFlag = 0; //����ũ �������� üũ�Ѵ� 
	sinItemKindFlag = 0;


	ItemInfoCol=0; //�������� �ټ�
	SpecialItemLine = 0; //Ưȭ ������ ���ν��� �� �ʱ�ȭ 

	if(pItem->Class == ITEM_CLASS_WEAPON_ONE )
		tWeaponClass = 1;

	if(pItem->Class == ITEM_CLASS_WEAPON_TWO )
		tWeaponClass = 2;

	if((pItem->sItemInfo.CODE & sinITEM_MASK2) == sinDA1 )
		tWeaponClass = 3;
	if((pItem->sItemInfo.CODE & sinITEM_MASK2) == sinDA2 ) //�κ� 
		tWeaponClass = 4;

	if((pItem->sItemInfo.CODE & sinITEM_MASK2) == sinOM1 ) //���� 
		tWeaponClass = 4;

	
	for(int t=0;t<10;t++){ //�ʱ�ȭ 
		RedLine[t] = 0;
		RequireLine[t] = 0;
	}
	for ( int t = 0; t <10; t++ )
	{
		MixItemLine[t] = 0;
		AgingItemLine[t] = 0;

	}

	
	sRequire.rDexterity = 0;  //�䱸ġ �÷� �ʱ�ȭ 
	sRequire.rHealth    = 0;
	sRequire.rLevel     = 0;
	sRequire.rSpirit    = 0;
	sRequire.rStrength  = 0;
	sRequire.rTalent    = 0;

	memset(&szTemp,0,sizeof(szTemp));
	memset(&szTemp2,0,sizeof(szTemp2));
	memset(&szInfoBuff,0,sizeof(szInfoBuff));
	memset(&szInfoBuff2,0,sizeof(szInfoBuff2));

	if(pItem->Class == ITEM_CLASS_WEAPON_TWO && pItem->ItemPosition){ //���ڵ� ���� �ϰ�� 
		memcpy(&sInfo,&cInvenTory.InvenItem[sInven[0].ItemIndex-1].sItemInfo,sizeof(sITEMINFO));

	}
	else
		memcpy(&sInfo,&pItem->sItemInfo,sizeof(sITEMINFO));

	
	#ifdef	_LANGUAGE_CHINESE //�ؿ� //�߱� 100�� ������ ǥ�� ����
	{
		if( sInfo.CODE == (sinWA1|sin20) )
		{//Minotaur Axe
			strcpy(sInfo.ItemName, ha100LVQuestItemName[0]);
		}

		if( sInfo.CODE == (sinWC1|sin20) )
		{//Extreme Talon
			strcpy(sInfo.ItemName, ha100LVQuestItemName[1]);
		}

		if( sInfo.CODE == (sinWH1|sin21) )
		{//Dragon Bone Hammer
			strcpy(sInfo.ItemName, ha100LVQuestItemName[2]);
		}

		if( sInfo.CODE == (sinWM1|sin21) )
		{//Gothic Staff
			strcpy(sInfo.ItemName, ha100LVQuestItemName[7]);
		}

		if( sInfo.CODE == (sinWP1|sin21) )
		{//Hellfire Scythe
			strcpy(sInfo.ItemName, ha100LVQuestItemName[3]);
		}

		if( sInfo.CODE == (sinWS1|sin22) )
		{//Revenge Bow
			strcpy(sInfo.ItemName, ha100LVQuestItemName[4]);
		}
	
		if( sInfo.CODE == (sinWS2|sin23) )
		{//Immortal Sword
			strcpy(sInfo.ItemName, ha100LVQuestItemName[5]);
		}

		if( sInfo.CODE == (sinWT1|sin21) )
		{//Salamander Javelin
			strcpy(sInfo.ItemName, ha100LVQuestItemName[6]);
		}

	}
	#endif
	#ifdef	_LANGUAGE_ENGLISH //�ؿ� //���� 100�� ������ ǥ�� ����
	{
		if( sInfo.CODE == (sinWA1|sin20) )
		{//Minotaur Axe
			strcpy(sInfo.ItemName, ha100LVQuestItemName[0]);
		}

		if( sInfo.CODE == (sinWC1|sin20) )
		{//Extreme Talon
			strcpy(sInfo.ItemName, ha100LVQuestItemName[1]);
		}

		if( sInfo.CODE == (sinWH1|sin21) )
		{//Dragon Bone Hammer
			strcpy(sInfo.ItemName, ha100LVQuestItemName[2]);
		}

		if( sInfo.CODE == (sinWM1|sin21) )
		{//Gothic Staff
			strcpy(sInfo.ItemName, ha100LVQuestItemName[7]);
		}

		if( sInfo.CODE == (sinWP1|sin21) )
		{//Hellfire Scythe
			strcpy(sInfo.ItemName, ha100LVQuestItemName[3]);
		}

		if( sInfo.CODE == (sinWS1|sin22) )
		{//Revenge Bow
			strcpy(sInfo.ItemName,ha100LVQuestItemName[4]);
		}
	
		if( sInfo.CODE == (sinWS2|sin23) )
		{//Immortal Sword
			strcpy(sInfo.ItemName, ha100LVQuestItemName[5]);
		}

		if( sInfo.CODE == (sinWT1|sin21) )
		{//Salamander Javelin
			strcpy(sInfo.ItemName, ha100LVQuestItemName[6]);
		}

		//DRZ_EDIT Add new class Quest Weapon here.

	}
	#endif
	#ifdef	_LANGUAGE_VEITNAM //�ؿ� //��Ʈ�� 100�� ������ ǥ�� ����
	{
		if( sInfo.CODE == (sinWA1|sin20) )
		{//Minotaur Axe
			strcpy(sInfo.ItemName, ha100LVQuestItemName[0]);
		}

		if( sInfo.CODE == (sinWC1|sin20) )
		{//Extreme Talon
			strcpy(sInfo.ItemName, ha100LVQuestItemName[1]);
		}

		if( sInfo.CODE == (sinWH1|sin21) )
		{//Dragon Bone Hammer
			strcpy(sInfo.ItemName, ha100LVQuestItemName[2]);
		}

		if( sInfo.CODE == (sinWM1|sin21) )
		{//Gothic Staff
			strcpy(sInfo.ItemName, ha100LVQuestItemName[7]);
		}

		if( sInfo.CODE == (sinWP1|sin21) )
		{//Hellfire Scythe
			strcpy(sInfo.ItemName, ha100LVQuestItemName[3]);
		}

		if( sInfo.CODE == (sinWS1|sin22) )
		{//Revenge Bow
			strcpy(sInfo.ItemName, ha100LVQuestItemName[4]);
		}
	
		if( sInfo.CODE == (sinWS2|sin23) )
		{//Immortal Sword
			strcpy(sInfo.ItemName, ha100LVQuestItemName[5]);
		}

		if( sInfo.CODE == (sinWT1|sin21) )
		{//Salamander Javelin
			strcpy(sInfo.ItemName, ha100LVQuestItemName[6]);
		}

	}
	#endif

	if(sInfo.UniqueItem)
		UniFlag = 1; //����ũ ������ �÷� 
	if(sInfo.ItemKindCode)
		sinItemKindFlag = sInfo.ItemKindCode;

	//��� ������
	if(sInfo.CODE == (sinQT1|sin06)){
		sinItemKindFlag = 100;
	}


	//������ �̸�
	if(tWeaponClass) 
		wsprintf(szInfoBuff,"%s%s\r",sInfo.ItemName,"  "); //�׸��� �� ���� 
	else
		wsprintf(szInfoBuff,"%s\r",sInfo.ItemName);
	
	//���ָӴ��ϰ��
	if((sInfo.CODE & sinITEM_MASK2) == sinPZ1 || (sInfo.CODE & sinITEM_MASK2) == sinPZ2){
		if(sInfo.PotionCount <= 1){
			wsprintf(szInfoBuff,"%s\r",sinLuckyBox);

		}
	}


	lstrcpy(szInfoBuff2,"\r"); //��ĭ �ǳʶ� 
	ItemInfoCol++;
	
	//����¡ �������� ��� ������ ������ �ǳʶ� 
	if(sInfo.ItemKindCode == ITEM_KIND_AGING ){
		if(sInfo.ItemAgingCount[1]) AgingGageFlag = 1;
		else AgingGageFlag = 2;
		
		lstrcat(szInfoBuff,"\r\r");
		lstrcat(szInfoBuff2,"\r\r"); //��ĭ  �ǳʶ� 
		ItemInfoCol++;
		ItemInfoCol++;
		if(sInfo.ItemAgingCount[0]){
			AgingBarLenght = (int)((float)((float)125*(((float)sInfo.ItemAgingCount[0]/(float)sInfo.ItemAgingCount[1]))));


		}
		AgingLevel4 = sInfo.ItemAgingNum[0];

	}
	if(sInfo.ItemKindCode == ITEM_KIND_QUEST_WEAPON && sInfo.ItemAgingNum[0] < 4 &&
		(sInfo.CODE & sinITEM_MASK2) != sinOR2){     
		lstrcat(szInfoBuff,"\r");  
		lstrcat(szInfoBuff2,"\r"); //��ĭ
		ItemInfoCol++;

		wsprintf(szTemp,"%s:%d/%d  \r",QuestMonsterName[sInfo.ItemAgingNum[1]],sInfo.ItemAgingCount[1]-sInfo.ItemAgingCount[0],sInfo.ItemAgingCount[1]); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		QuestItemLine =  ItemInfoCol;

		lstrcat(szInfoBuff,"\r");
		lstrcat(szInfoBuff2,"\r"); //��ĭ
		ItemInfoCol++;


	}

	/////////////��ȯ ������ 
	
	if(pItem->CODE == (sinEC1|sin01)){ //�ʺ������� ���� 
		lstrcpy(szTemp,TownName[0]); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(pItem->CODE == (sinEC1|sin02)){ //�ʺ������� ���� 
		lstrcpy(szTemp,TownName[1]); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(pItem->CODE == (sinEC1|sin04)){ //���ο������
		lstrcpy(szTemp,TownName[2]); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	//TEST
	/*
	char szTestLinkCore[32];
	memcpy(szTestLinkCore,"��ũ �ھ� �̹����������",32); 
	szTestLinkCore[9]=0;
	char szLinkName[24];
	int len = lstrlen(szTestLinkCore);
	if(szTestLinkCore[len+1] != NULL){
		lstrcpy(szLinkName,&szTestLinkCore[len+1]);
		lstrcpy(szTemp,szLinkName); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
	}
	*/


	if(pItem->CODE == (sinGP1|sin10) || pItem->CODE == (sinGP1|sin22) ){ //Ŭ�� ũ����Ż // pluto ����� �����
		lstrcpy(szTemp,ClanCristalName); 
		lstrcat(szInfoBuff,szTemp);
        lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		for(cnt = 0; cnt <10; cnt++){
			if(!MixItemLine[cnt]){
				MixItemLine[cnt] = ItemInfoCol;
				break;
			}
		}
	}

	//��ũ�ھ� �̸����� ĳ���� �̸��� ���� 
	int len = lstrlen(pItem->sItemInfo.ItemName);   
	char szLinkName[24];
	if(pItem->CODE == (sinEC1|sin05)){ //��ũ�ھ�
		lstrcpy(szTemp,LinkCoreName); 
		lstrcat(szInfoBuff,szTemp);
        lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if(pItem->sItemInfo.ItemName[len+1] != NULL){ 
			//�������� ��ĭ�ǳʶ�
			lstrcat(szInfoBuff,"\r");
			lstrcat(szInfoBuff2,"\r"); //��ĭ  �ǳʶ� 
			ItemInfoCol++;

			lstrcpy(szLinkName,&pItem->sItemInfo.ItemName[len+1]);
			lstrcpy(szTemp,szLinkName);
			lstrcat(szInfoBuff,DesLinkCore); //���: �̶�� �ٿ��ش�
			lstrcat(szInfoBuff,szTemp);
            lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
			lstrcat(szInfoBuff,szTemp2); //�̸��ڿ� \r�� �����Ƿ� �ϳ��ٿ��ش�
			lstrcat(szInfoBuff2,szTemp2);
			ItemInfoCol++;

			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}

			}

		}
	}

	/* �ƽ����� ������ ����ߵ� -_-
	if(sInfo.CODE == (sinQT1|sin06)){
		lstrcpy(szTemp,VampOption[0]);
		wsprintf(szTemp2,"%d%s\r",50,"%");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

		lstrcpy(szTemp,VampOption[1]);
		wsprintf(szTemp2,"%d%s\r",20,"%");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

		lstrcpy(szTemp,VampOption[2]);
		wsprintf(szTemp2,"%d%s\r",15,"%");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;


		sinRegen = (int)(1.6f*10.001f);
		sinRightSpot =  sinRegen %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinRegen - sinRightSpot)/10;
		lstrcpy(szTemp,VampOption[3]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot,sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

		lstrcpy(szTemp,VampOption[4]);
		wsprintf(szTemp2,"%d%s\r",3,"%");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
	}
	*/
	
	if(sInfo.Damage[0] || sInfo.Damage[1]){ //���ݷ�  ����ġ 
		lstrcpy(szTemp,sinAbilityName[0]); 
		wsprintf(szTemp2,"%d-%d\r",sInfo.Damage[0],sInfo.Damage[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_DAMAGE_MIN)!=0 || 
			(sInfo.ItemKindMask & SIN_ADD_DAMAGE_MAX)!=0 ){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}

			}
		}
		//����¡ ���� 
		if(sInfo.ItemAgingNum[0]){
			if((sInfo.CODE & sinITEM_MASK2)==sinWA1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWC1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWH1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWM1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWP1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWS1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWS2 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWT1 )

				AgingItemLine[AgingCnt++] = ItemInfoCol;

		}
		
	}

	if(sInfo.Attack_Speed){  
		lstrcpy(szTemp,sinAbilityName[1]);
		if(CheckQuestItemDownFlag && sInfo.ItemKindCode == ITEM_KIND_QUEST_WEAPON){
			wsprintf(szTemp2,"%d\r",sInfo.Attack_Speed-2);
			RedLine[9] = ItemInfoCol+1;
		}
		else{
			wsprintf(szTemp2,"%d\r",sInfo.Attack_Speed);
		}
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_ATTACK_SPEED)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}

			}
		}

	}

	if(sInfo.Shooting_Range){ 
		lstrcpy(szTemp,sinAbilityName[2]);
		wsprintf(szTemp2,"%d\r",sInfo.Shooting_Range);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		/*
		if((sInfo.ItemKindMask & SIN_ADD_ATTACK_SPEED)!=0){
			for(cnt = 0; cnt <10; cnt++)
				if(!MixItemLine[cnt])MixItemLine[cnt] = ItemInfoCol;


		}
		*/
		//����¡ ���� 
		/*
		if(sInfo.ItemAgingNum[0]){
			if((sInfo.CODE & sinITEM_MASK2)==sinWS1||
				(sInfo.CODE & sinITEM_MASK2)==sinWT1)
				AgingItemLine[AgingCnt++] = ItemInfoCol;

		}
		*/


	}
	if(sInfo.Critical_Hit){
		lstrcpy(szTemp,sinAbilityName[3]);
		wsprintf(szTemp2,"%d%s\r",sInfo.Critical_Hit,"%");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_CRITICAL)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}
		//����¡ ���� 
		if(sInfo.ItemAgingNum[0]){
			if(	(sInfo.CODE & sinITEM_MASK2)==sinWC1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWP1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWS1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWT1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWS2 )
				AgingItemLine[AgingCnt++] = ItemInfoCol;

		}				
	}

	//��� ���� 
	if(sInfo.Defence){
		lstrcpy(szTemp,sinAbilityName[4]);
		wsprintf(szTemp2,"%d\r",sInfo.Defence);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_DEFENCE)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}

		//����¡ ���� 
		if(sInfo.ItemAgingNum[0]){
			if(	(sInfo.CODE & sinITEM_MASK2)==sinOM1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDA1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDA2 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDB1 || // ����� - ����¡ ������ �߰�(����)
				(sInfo.CODE & sinITEM_MASK2)==sinDG1 || // ����� - ����¡ ������ �߰�(�尩)
				(sInfo.CODE & sinITEM_MASK2)==sinOA2 ){ // ����� - ����¡ ������ �߰�(�ϸ�)
				AgingItemLine[AgingCnt++] = ItemInfoCol;
			}

		}				

	}

	if(sInfo.Attack_Rating){
		lstrcpy(szTemp,sinAbilityName[5]);
		wsprintf(szTemp2,"%d\r",sInfo.Attack_Rating);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_ATTACK_RATE)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}
		//����¡ ���� 
		if(sInfo.ItemAgingNum[0]){
			if((sInfo.CODE & sinITEM_MASK2)==sinWA1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWC1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWM1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWH1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWP1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWS2 ||
				(sInfo.CODE & sinITEM_MASK2)==sinOA2 ){ // ����� - ����¡ ������ �߰�(�ϸ�)
				AgingItemLine[AgingCnt++] = ItemInfoCol;
			}
		}		
	}

	if(sInfo.fAbsorb){  
		//sinAbsorb = (int)(sInfo.fAbsorb*10.001f);
		sinAbsorb = (int)(GetItemAbsorb(&sInfo)*10.001f);
		sinRightSpot =  sinAbsorb %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinAbsorb - sinRightSpot)/10;
		lstrcpy(szTemp,sinAbilityName[6]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot,sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_ABSORB)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}

		}
		if(sInfo.ItemAgingNum[0]){
			if(	(sInfo.CODE & sinITEM_MASK2)==sinOM1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDA1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDS1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDA2 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDB1 || // ����� - ����¡ ������ �߰�(����)
				(sInfo.CODE & sinITEM_MASK2)==sinDG1 ){  // ����� - ����¡ ������ �߰�(�尩)
				AgingItemLine[AgingCnt++] = ItemInfoCol;
			}
		}				
	}

	if(sInfo.fBlock_Rating){
		BlockRate = (int)(sInfo.fBlock_Rating);
		lstrcpy(szTemp,sinAbilityName[7]);
		wsprintf(szTemp2,"%d%s\r",BlockRate,"%");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
	
		if((sInfo.ItemKindMask & SIN_ADD_BLOCK_RATE)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}

			}
		}

		//����¡ ���� 
		if(sInfo.ItemAgingNum[0]){
			if(	(sInfo.CODE & sinITEM_MASK2)==sinDS1)
				AgingItemLine[AgingCnt++] = ItemInfoCol;

		}				


	}

	//�̵� ���� 
	if(sInfo.fSpeed){
		sinSpeed  = (int)(sInfo.fSpeed *10.001f);
		sinRightSpot =  sinSpeed %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinSpeed - sinRightSpot)/10;
		lstrcpy(szTemp,sinAbilityName[8]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot,sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_MOVE_SPEED)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}

		}

	}

	if(sInfo.Durability[0] || sInfo.Durability[1]){ //������ ����ġ 
		lstrcpy(szTemp,sinAbilityName[9]); 		
		wsprintf(szTemp2,"%d/%d\r",sInfo.Durability[0],sInfo.Durability[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

		if(sInfo.ItemAgingNum[0]){
			if((sInfo.CODE & sinITEM_MASK2)==sinWA1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWH1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWS1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDS1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinOM1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDA1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDA2 ||
				(sInfo.CODE & sinITEM_MASK2)==sinDB1 || // ����� - ����¡ ������ �߰�(����)
				(sInfo.CODE & sinITEM_MASK2)==sinDG1 || // ����� - ����¡ ������ �߰�(�尩)
				(sInfo.CODE & sinITEM_MASK2)==sinOA2 ){ // ����� - ����¡ ������ �߰�(�ϸ�)
				AgingItemLine[AgingCnt++] = ItemInfoCol;
			}

		}

	}

	//ȸ���� 
	if(sInfo.Mana[0] || sInfo.Mana[1]){
		lstrcpy(szTemp,sinAbilityName[10]);
		wsprintf(szTemp2,"%d-%d\r",sInfo.Mana[0],sInfo.Mana[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.Life[0] || sInfo.Life[1]){
		lstrcpy(szTemp,sinAbilityName[11]);
		wsprintf(szTemp2,"%d-%d\r",sInfo.Life[0],sInfo.Life[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.Stamina[0] || sInfo.Stamina[1]){
		lstrcpy(szTemp,sinAbilityName[12]);
		wsprintf(szTemp2,"%d-%d\r",sInfo.Stamina[0],sInfo.Stamina[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	//���׷� 
	if(sInfo.Resistance[0]){
		lstrcpy(szTemp,sinAbilityName[13]);
		wsprintf(szTemp2,"%d\r",sInfo.Resistance[0]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_BIO)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}
	}
	if(sInfo.Resistance[1]){
		lstrcpy(szTemp,sinAbilityName[14]);
		wsprintf(szTemp2,"%d\r",sInfo.Resistance[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.Resistance[2]){
		lstrcpy(szTemp,sinAbilityName[15]);
		wsprintf(szTemp2,"%d\r",sInfo.Resistance[2]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_FIRE)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}

		}

	}

	if(sInfo.Resistance[3]){
		lstrcpy(szTemp,sinAbilityName[16]);
		wsprintf(szTemp2,"%d\r",sInfo.Resistance[3]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_ICE)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}
	}
	if(sInfo.Resistance[4]){
		lstrcpy(szTemp,sinAbilityName[17]);
		wsprintf(szTemp2,"%d\r",sInfo.Resistance[4]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_LIGHTNING)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}
	}
	if(sInfo.Resistance[5]){
		lstrcpy(szTemp,sinAbilityName[18]);
		wsprintf(szTemp2,"%d\r",sInfo.Resistance[5]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_POISON)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}
	}
	if(sInfo.Resistance[6]){ 
		lstrcpy(szTemp,sinAbilityName[19]);
		wsprintf(szTemp2,"%d\r",sInfo.Resistance[6]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.Resistance[7]){
		lstrcpy(szTemp,sinAbilityName[20]);
		wsprintf(szTemp2,"%d\r",sInfo.Resistance[7]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(sInfo.fLife_Regen && (sInfo.CODE & sinITEM_MASK2) != sinFO1){
		sinRegen = (int)(sInfo.fLife_Regen*10.001f);
		sinRightSpot =  sinRegen %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinRegen - sinRightSpot)/10;
		lstrcpy(szTemp,sinAbilityName[21]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot,sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_LIFEREGEN)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}

	}

	if(sInfo.fMana_Regen && (sInfo.CODE & sinITEM_MASK2) != sinFO1){
		sinRegen = (int)(sInfo.fMana_Regen*10.001f);
		sinRightSpot =  sinRegen %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinRegen - sinRightSpot)/10;
		lstrcpy(szTemp,sinAbilityName[22]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot,sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

		if((sInfo.ItemKindMask & SIN_ADD_MANAREGEN)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}

	}

	if(sInfo.fStamina_Regen && (sInfo.CODE & sinITEM_MASK2) != sinFO1){
		sinRegen = (int)(sInfo.fStamina_Regen*10.001f);
		sinRightSpot =  sinRegen %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinRegen - sinRightSpot)/10;
		lstrcpy(szTemp,sinAbilityName[23]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot,sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_STAMINAREGEN)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}

	}
	int AddState;
	if(sInfo.fIncrease_Life){
		AddState = (int)sInfo.fIncrease_Life;
		lstrcpy(szTemp,sinAbilityName[24]); 		
		wsprintf(szTemp2,"%d\r",AddState);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_LIFE)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}
	}
	if(sInfo.fIncrease_Mana){
		AddState = (int)sInfo.fIncrease_Mana;
		lstrcpy(szTemp,sinAbilityName[25]); 		
		wsprintf(szTemp2,"%d\r",AddState);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_MANA)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}

		//����¡ ���� 
		if(sInfo.ItemAgingNum[0]){
			if((sInfo.CODE & sinITEM_MASK2)==sinWM1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWS1 ||
				(sInfo.CODE & sinITEM_MASK2)==sinWT1){
				AgingItemLine[AgingCnt++] = ItemInfoCol;
			}

		}

	}
	if(sInfo.fIncrease_Stamina){
		AddState = (int)sInfo.fIncrease_Stamina;
		lstrcpy(szTemp,sinAbilityName[26]); 		
		wsprintf(szTemp2,"%d\r",AddState);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		if((sInfo.ItemKindMask & SIN_ADD_STAMINA)!=0){
			for(cnt = 0; cnt <10; cnt++){
				if(!MixItemLine[cnt]){
					MixItemLine[cnt] = ItemInfoCol;
					break;
				}
			}
		}

	}
	if(sInfo.Potion_Space){
		lstrcpy(szTemp,sinAbilityName[27]); 		
		wsprintf(szTemp2,"%d\r",sInfo.Potion_Space);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	//�䱸ġ 
	int i = 0;
	if(sInfo.Level){  
		lstrcpy(szTemp,sinAbilityName[28]);
		if((sInfo.CODE & sinITEM_MASK2) == sinFO1){
			lstrcat(szInfoBuff,"\r");
			lstrcat(szInfoBuff2,"\r"); //��ĭ  �ǳʶ� 
			ItemInfoCol++;

			for( i = 0; i < 12 ; i++){ // ����� : ��� ���� �߰��� ���� ���� 12�� ����
				if( ((pItem->CODE&sinITEM_MASK3)== SheltomCode2[i]) ) // ����� - �Ϲ� ���� �߰�
				{
					if(i <= 3){
						wsprintf(szTemp2,"%d-%d\r",ForceOrbUseLevel[i][0],ForceOrbUseLevel[i][1]);
					}
					else{
						wsprintf(szTemp2,"%d+\r",ForceOrbUseLevel[i][0]);
					}
					break;
				}
				else if(((pItem->CODE&sinITEM_MASK3)== MagicSheltomCode[i])) // ����� - ���� ����(��� ����)
				{
					if(i <= 3){
						wsprintf(szTemp2,"%d-%d\r",MagicForceOrbUseLevel[i][0],MagicForceOrbUseLevel[i][1]);
					}
					else{
						wsprintf(szTemp2,"%d+\r",MagicForceOrbUseLevel[i][0]);
					}
					break;
				}
				else if( ( (pItem->CODE&sinITEM_MASK3)== BillingMagicSheltomCode[i]) ) // ����� - ��� ���� ���� �߰�
				{
					wsprintf(szTemp2,"%d+\r",BillingMagicForceOrbUseLevel[i][0]);
					break;
				}
			}
			lstrcat(szInfoBuff,szTemp);
			lstrcat(szInfoBuff2,szTemp2);
			ItemInfoCol++;
			RequireLine[0] = ItemInfoCol;
			if(sinChar->Level < ForceOrbUseLevel[i][0] ||
				sinChar->Level > ForceOrbUseLevel[i][1]){
				sRequire.rLevel = 1;
				RedLine[0]=ItemInfoCol;
			}

		}
		else{
			wsprintf(szTemp2,"%d\r",sInfo.Level);
			lstrcat(szInfoBuff,szTemp);
			lstrcat(szInfoBuff2,szTemp2);
			ItemInfoCol++;
			RequireLine[0] = ItemInfoCol;
			if(sInfo.Level >sinChar->Level){
				sRequire.rLevel = 1;
				RedLine[0]=ItemInfoCol;
			}
		}
	}

	//��������
	if((sInfo.CODE & sinITEM_MASK2) == sinFO1){      
		for( i = 0; i < 12 ; i++){ // ����� : ��� ���� �߰��� ���� ���� 12�� ����
			if((pItem->CODE&sinITEM_MASK3)== SheltomCode2[i]){
				lstrcpy(szTemp,sinAddDamageItem); 		
				wsprintf(szTemp2,"%d\r",ForceOrbDamage[i]);
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;
				// ����� : ��� ���� �߰�
				if(i>5 && i<10){ // ����� : ��� ���� �߰�(��Ű, �����, �췹����, �̶��� ������ ��� ���ݷ� ���� 10%�� �� �ٿ��ش�) 
					lstrcpy(szTemp,AddPercentDamage3);
					wsprintf(szTemp2,"%d%s\r",10,"%");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
				}
				else if(i==10){ // ����� : ��� ���� �߰�(���丣�� ������ ��� ���ݷ� ���� 15%�� �� �ٿ��ش�) 
					lstrcpy(szTemp,AddPercentDamage3);
					wsprintf(szTemp2,"%d%s\r",15,"%");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
				}
				else if(i==11){ // ����� : ��� ���� �߰�(�̴ϱ׸� ������ ��� ���ݷ� ���� 20%�� �� �ٿ��ش�) 
					lstrcpy(szTemp,AddPercentDamage3);
					wsprintf(szTemp2,"%d%s\r",20,"%");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
				}

				lstrcpy(szTemp,sinContinueTimeItem); 		
				wsprintf(szTemp2,"%d%s\r",ForceOrbUseTime[i],SecName);
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;
				break;
			}
			else if((pItem->CODE&sinITEM_MASK3)== MagicSheltomCode[i]) // ����� - ���� ���� �߰�
			{
				lstrcpy(szTemp,sinAddDamageItem); 		
				wsprintf(szTemp2,"%d\r",MagicForceOrbDamage[i]);
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;

				// ����� - ���� ���� �߰�
				if(i>5 && i<10){ // ����� - ���� ���� �߰�(��Ű, �����, �췹����, �̶��� ������ ��� ���ݷ� ���� 10%�� �� �ٿ��ش�) 
					lstrcpy(szTemp,AddPercentDamage3);
					wsprintf(szTemp2,"%d%s\r",10,"%");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
				}
				else if(i==10){ // ����� - ���� ���� �߰�(���丣�� ������ ��� ���ݷ� ���� 15%�� �� �ٿ��ش�) 
					lstrcpy(szTemp,AddPercentDamage3);
					wsprintf(szTemp2,"%d%s\r",15,"%");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
				}
				else if(i==11){ // ����� - ���� ���� �߰�(�̴ϱ׸� ������ ��� ���ݷ� ���� 20%�� �� �ٿ��ش�) 
					lstrcpy(szTemp,AddPercentDamage3);
					wsprintf(szTemp2,"%d%s\r",20,"%");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
				}

				lstrcpy(szTemp,sinContinueTimeItem); 		
				wsprintf(szTemp2,"%d%s\r",MagicForceOrbUseTime[i],SecName);
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;
				break;	
			}
			else if((pItem->CODE&sinITEM_MASK3)== BillingMagicSheltomCode[i]) // ����� - ��� ���� ���� �߰�
			{
				// ����� - ��� ���� ���� �߰�(���ݷ� ���� 15%�� �� �ٿ��ش�) 
				lstrcpy(szTemp,AddPercentDamage3);
				wsprintf(szTemp2,"%d%s\r",15,"%");
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;

				lstrcpy(szTemp,sinContinueTimeItem); 		
				wsprintf(szTemp2,"%d%s\r",BillingMagicForceOrbUseTime[i],SecName);
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;
				break;	
			}
		}
	}

	//�Ѻ��̺�Ʈ �׽�Ʈ //Kyle����
	//14��
	if(pItem->sItemInfo.CODE == (sinDA1|sin48) || pItem->sItemInfo.CODE == (sinDA2|sin48))
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*14)-(NowTime-pItem->sItemInfo.dwCreateTime);
		lstrcpy(szTemp,sinContinueTimeItem); 		
		wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  //
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}


	//�� �� �� : �����,  �ۼ��� : 08.04.07
	//��    �� : Ŭ��ġ���� ����
	//�����Ⱓ : 5��
	//if((sInfo.CODE & sinITEM_MASK2) == sin06)
	if(pItem->sItemInfo.CODE == (sinOR2|sin06) || pItem->sItemInfo.CODE == (sinOR2|sin07) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin08) || pItem->sItemInfo.CODE == (sinOR2|sin09) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin10) || pItem->sItemInfo.CODE == (sinOR2|sin11) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin12) || pItem->sItemInfo.CODE == (sinOR2|sin13) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin14) || pItem->sItemInfo.CODE == (sinOR2|sin15) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin16) || pItem->sItemInfo.CODE == (sinOR2|sin17) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin18) || pItem->sItemInfo.CODE == (sinOR2|sin19) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin20) || pItem->sItemInfo.CODE == (sinOR2|sin21) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin22) || pItem->sItemInfo.CODE == (sinOR2|sin23) ||
	   pItem->sItemInfo.CODE == (sinOR2|sin24) || pItem->sItemInfo.CODE == (sinOR2|sin25))
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*5)-(NowTime-pItem->sItemInfo.dwCreateTime);
		lstrcpy(szTemp,sinContinueTimeItem); 		
		wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  //
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	//�� �� �� : �����,  �ۼ��� : 09.12.08
	//��    �� : ��Ÿ ��, ��Ÿ �ƹķ� �Ⱓ���� ����
	//�����Ⱓ : 3��
	if( pItem->sItemInfo.CODE == (sinOR2|sin27) || pItem->sItemInfo.CODE == (sinOA1|sin32) )  // ��Ÿ ��, �ƹķ�
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*3)-(NowTime-pItem->sItemInfo.dwCreateTime);
	//	DWORD Time    = 0;  // ����� : ��Ÿ��, ��Ÿ�ƹķ��� �ͽ��ĵǸ鼭 �ð��� �ʱ�ȭ �Ǿ� ������ ������Ű�� ����. �����ð� 0���� ǥ��
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  

		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}
	
	//�� �� �� : �����,  �ۼ��� : 09.07.31
	//��    �� : �̺�Ʈ ��, �̺�Ʈ �ƹķ� �Ⱓ���� ����
	//�����Ⱓ : 7��
	if( pItem->sItemInfo.CODE == (sinOR2|sin28) || pItem->sItemInfo.CODE == (sinOA1|sin33) )  // �̺�Ʈ ��, �ƹķ�
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*7)-(NowTime-pItem->sItemInfo.dwCreateTime); // 7�Ϸ� ����
		//DWORD Time    = 0;  // ����� - �̺�Ʈ��, �̺�Ʈ�ƹķ� ������ ������Ű�� ����. �����ð� 0���� ǥ��
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  
		//	wsprintf(szTemp2,"%d%s%d%s\r",(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2); //1�Ϸ� ������
		// 	wsprintf(szTemp2,"%d%s\r",(Time/60)%60,sinMinute2);  // 1�ð����� ������
		
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	//�� �� �� : �����,  �ۼ��� : 09.12.17
	//��    �� : �̺�Ʈ ��, �̺�Ʈ �ƹķ� �Ⱓ���� ����
	//�����Ⱓ : 1�ð�
	if( pItem->sItemInfo.CODE == (sinOR2|sin29) || pItem->sItemInfo.CODE == (sinOA1|sin34) )  // �̺�Ʈ ��, �ƹķ�
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60)-(NowTime-pItem->sItemInfo.dwCreateTime); // 1�ð����� ����
		//DWORD Time    = 0;  // ����� - �̺�Ʈ��, �̺�Ʈ�ƹķ� ������ ������Ű�� ����. �����ð� 0���� ǥ��
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
		//	wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  // 1�� �̻� ������
		//	wsprintf(szTemp2,"%d%s%d%s\r",(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2); //1�Ϸ� ������
		 	wsprintf(szTemp2,"%d%s\r",(Time/60)%60,sinMinute2);  // 1�ð����� ������

		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	//�� �� �� : �����,  �ۼ��� : 09.12.17
	//��    �� : �̺�Ʈ ��, �̺�Ʈ �ƹķ� �Ⱓ���� ����
	//�����Ⱓ : 1��
	if( pItem->sItemInfo.CODE == (sinOR2|sin30) || pItem->sItemInfo.CODE == (sinOA1|sin35) )  // �̺�Ʈ ��, �ƹķ�
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24)-(NowTime-pItem->sItemInfo.dwCreateTime); // 1�Ϸ� ����
		//DWORD Time    = 0;  // ����� - �̺�Ʈ��, �̺�Ʈ�ƹķ� ������ ������Ű�� ����. �����ð� 0���� ǥ��
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			//	wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  // 1�� �̻� ������
				wsprintf(szTemp2,"%d%s%d%s\r",(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2); //1�Ϸ� ������
			//	wsprintf(szTemp2,"%d%s\r",(Time/60)%60,sinMinute2);  // 1�ð����� ������

		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	//�� �� �� : �庰,  �ۼ��� : 10.02.02
	//��    �� : ��Ʈ��(�߷�Ÿ�� �̺�Ʈ) �Ⱓ���� ����
	//�����Ⱓ : 7��
	if( pItem->sItemInfo.CODE == (sinOR2|sin33) ) 
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*7)-(NowTime-pItem->sItemInfo.dwCreateTime); // 7�Ϸ� ����
		//DWORD Time    = 0;  // 
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  
		//	wsprintf(szTemp2,"%d%s%d%s\r",(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2); //1�Ϸ� ������
		// 	wsprintf(szTemp2,"%d%s\r",(Time/60)%60,sinMinute2);  // 1�ð����� ������
		
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}


	//�� �� �� : �庰,  �ۼ��� : 10.02.09
	//��    �� : ���� ����� �Ⱓ���� ����
	//�����Ⱓ : 7��
	if( pItem->sItemInfo.CODE == (sinOA1|sin36) )  // ������ �����
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*7)-(NowTime-pItem->sItemInfo.dwCreateTime); // 7�Ϸ� ����
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  

		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  
		
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	// �庰 - ĵ������
	//�� �� �� : �庰,  �ۼ��� : 10.02.24
	//��    �� : ��Ʈ�ƹķ�(ĵ������) �Ⱓ���� ����
	//�����Ⱓ : 7��
	if( pItem->sItemInfo.CODE == (sinOA1|sin37) ) 
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*7)-(NowTime-pItem->sItemInfo.dwCreateTime); // 7�Ϸ� ����
		//DWORD Time    = 0;  // 
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  
		//	wsprintf(szTemp2,"%d%s%d%s\r",(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2); //1�Ϸ� ������
		// 	wsprintf(szTemp2,"%d%s\r",(Time/60)%60,sinMinute2);  // 1�ð����� ������
		
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}


	// �庰 - ���ǵ� ����(1��)
	if( pItem->sItemInfo.CODE == (sinDB1|sin33) )
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*1)-(NowTime-pItem->sItemInfo.dwCreateTime);
		lstrcpy(szTemp,sinContinueTimeItem); 	
		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r", ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  //
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	// �庰 - ���ǵ� ����(1�ð�)
	if( pItem->sItemInfo.CODE == (sinDB1|sin34) )
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60)-(NowTime-pItem->sItemInfo.dwCreateTime);
		lstrcpy(szTemp,sinContinueTimeItem); 	
		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r", ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  //
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}


	// �庰 - ���� �ϸ�(1��)
	if( pItem->sItemInfo.CODE == (sinOA2|sin33) )
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*1)-(NowTime-pItem->sItemInfo.dwCreateTime);
		lstrcpy(szTemp,sinContinueTimeItem); 	
		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r", ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  //
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	// �庰 - ���� �ϸ�(1�ð�)
	if( pItem->sItemInfo.CODE == (sinOA2|sin34) )
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60)-(NowTime-pItem->sItemInfo.dwCreateTime);
		lstrcpy(szTemp,sinContinueTimeItem); 	
		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r", ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  //
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	// �庰 - �ҿｺ��
	//�����Ⱓ : 7��
	if( pItem->sItemInfo.CODE == (sinOR2|sin36) || pItem->sItemInfo.CODE == (sinOR2|sin37) ||
		pItem->sItemInfo.CODE == (sinOR2|sin38) || pItem->sItemInfo.CODE == (sinOR2|sin39) ||
		pItem->sItemInfo.CODE == (sinOR2|sin40) )
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*7)-(NowTime-pItem->sItemInfo.dwCreateTime); // 7�Ϸ� ����
		//DWORD Time    = 0;  // 
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  
		//	wsprintf(szTemp2,"%d%s%d%s\r",(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2); //1�Ϸ� ������
		// 	wsprintf(szTemp2,"%d%s\r",(Time/60)%60,sinMinute2);  // 1�ð����� ������
		
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	// �庰 - �ҿｺ��
	//�����Ⱓ : 14��
	if( pItem->sItemInfo.CODE == (sinOA1|sin39) || pItem->sItemInfo.CODE == (sinOA1|sin40) ||
		pItem->sItemInfo.CODE == (sinOA1|sin41) || pItem->sItemInfo.CODE == (sinOA1|sin42) )
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*14)-(NowTime-pItem->sItemInfo.dwCreateTime); // 7�Ϸ� ����
		//DWORD Time    = 0;  // 
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  
		//	wsprintf(szTemp2,"%d%s%d%s\r",(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2); //1�Ϸ� ������
		// 	wsprintf(szTemp2,"%d%s\r",(Time/60)%60,sinMinute2);  // 1�ð����� ������
		
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}

	// �庰 - ���� �̺�Ʈ �̺�Ʈ �ƹķ�, �� 
	//�����Ⱓ : 14��
	if( pItem->sItemInfo.CODE == (sinOR2|sin34) || pItem->sItemInfo.CODE == (sinOR2|sin35) ||
		pItem->sItemInfo.CODE == (sinOA1|sin38) )
	{
		DWORD NowTime = GetPlayTime_T();
		DWORD Time    = (60*60*24*14)-(NowTime-pItem->sItemInfo.dwCreateTime);
		//DWORD Time    = 0;  // 
		lstrcpy(szTemp,sinContinueTimeItem);

		if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
			wsprintf(szTemp2,"%s\r",ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
		else
			wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  
		//	wsprintf(szTemp2,"%d%s%d%s\r",(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2); //1�Ϸ� ������
		// 	wsprintf(szTemp2,"%d%s\r",(Time/60)%60,sinMinute2);  // 1�ð����� ������
		
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;	
	}


	//��Ƽ�� �ڽ�Ƭ
	//7��
	 if(pItem->sItemInfo.CODE == (sinDA1|sin31) || pItem->sItemInfo.CODE == (sinDA2|sin31) ||
	    pItem->sItemInfo.CODE == (sinDA1|sin33) || pItem->sItemInfo.CODE == (sinDA2|sin33) ||
	    pItem->sItemInfo.CODE == (sinDA1|sin35) || pItem->sItemInfo.CODE == (sinDA2|sin35) ||
		pItem->sItemInfo.CODE == (sinDA1|sin37) || pItem->sItemInfo.CODE == (sinDA2|sin37) ||
	    pItem->sItemInfo.CODE == (sinDA1|sin39) || pItem->sItemInfo.CODE == (sinDA2|sin39) ||
		pItem->sItemInfo.CODE == (sinDA1|sin41) || pItem->sItemInfo.CODE == (sinDA2|sin41) ||
		pItem->sItemInfo.CODE == (sinDA1|sin43) || pItem->sItemInfo.CODE == (sinDA2|sin43) ||
		pItem->sItemInfo.CODE == (sinDA1|sin45) || pItem->sItemInfo.CODE == (sinDA2|sin45) ||
	    pItem->sItemInfo.CODE == (sinDB1|sin31) || // ����� - ���ǵ� ����(7��) �߰�
		pItem->sItemInfo.CODE == (sinOA2|sin31) || // ����� - ���� �ϸ�(7��) �߰�
		pItem->sItemInfo.CODE == (sinOR2|sin31) || // ����� - ���� ���� �� �߰�(�ٺ�)
		pItem->sItemInfo.CODE == (sinOR2|sin32) )  // ����� - ���� ���� �� �߰�(ǻ��)
	 {
				DWORD NowTime = GetPlayTime_T();
			    DWORD Time    = (60*60*24*7)-(NowTime-pItem->sItemInfo.dwCreateTime);
				lstrcpy(szTemp,sinContinueTimeItem); 	
				if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
					wsprintf(szTemp2,"%s\r", ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
				else
					wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  //
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;	

	}
	//30��
	 if(pItem->sItemInfo.CODE == (sinDA1|sin32) || pItem->sItemInfo.CODE == (sinDA2|sin32) ||
	    pItem->sItemInfo.CODE == (sinDA1|sin34) || pItem->sItemInfo.CODE == (sinDA2|sin34) || 
		pItem->sItemInfo.CODE == (sinDA1|sin36) || pItem->sItemInfo.CODE == (sinDA2|sin36) || 
	    pItem->sItemInfo.CODE == (sinDA1|sin38) || pItem->sItemInfo.CODE == (sinDA2|sin38) ||  
	    pItem->sItemInfo.CODE == (sinDA1|sin40) || pItem->sItemInfo.CODE == (sinDA2|sin40) ||
		pItem->sItemInfo.CODE == (sinDA1|sin42) || pItem->sItemInfo.CODE == (sinDA2|sin42) ||
		pItem->sItemInfo.CODE == (sinDA1|sin44) || pItem->sItemInfo.CODE == (sinDA2|sin44) ||
		pItem->sItemInfo.CODE == (sinDA1|sin46) || pItem->sItemInfo.CODE == (sinDA2|sin46) ||
		pItem->sItemInfo.CODE == (sinDA1|sin54) || pItem->sItemInfo.CODE == (sinDA2|sin54) || // ����� - ������ ���� �߰�(����)
		pItem->sItemInfo.CODE == (sinDA1|sin55) || pItem->sItemInfo.CODE == (sinDA2|sin55) || // ����� - ������ ���� �߰�(����)
		pItem->sItemInfo.CODE == (sinDB1|sin32) || // ����� - ���ǵ� ����(30��) �߰�
		pItem->sItemInfo.CODE == (sinOA2|sin32) || // ����� - ���� �ϸ�(30��) �߰�
		pItem->sItemInfo.CODE == (sinSP1|sin34) )  // ����� - ȣ���� ĸ��(30��) �߰�
	 {						
				DWORD NowTime = GetPlayTime_T();
			    DWORD Time    = (60*60*24*30)-(NowTime-pItem->sItemInfo.dwCreateTime);
				lstrcpy(szTemp,sinContinueTimeItem); 	
				if( DeleteEventItem_TimeOut( &pItem->sItemInfo )==TRUE ) // ������ �����Ⱓ�� 0�� ���� ����� �������� �ٽ� �ð��� �þ�� ���� ������.
					wsprintf(szTemp2,"%s\r", ExpireItem);  // ������ �Ⱓ�� ����Ǿ��� ��� �Ⱓ���� �޽����� �ѷ��ش�.  
				else
					wsprintf(szTemp2,"%d%s%d%s%d%s\r",(Time/60/60)/24,sinDay4,(Time/60/60)%24,sinHour4,(Time/60)%60,sinMinute2);  //
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;	
	}
	//�����̾� ����ȭ ������
	if((sInfo.CODE & sinITEM_MASK2) == sinBI1 ){	
		for(int i=0;i<7;i++){ 
			if(pItem->CODE==dwPremiumItemCode[i]){
				lstrcpy(szTemp,PremiumItemDoc[i][0]); 		
				wsprintf(szTemp2,"\r");
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;

				lstrcpy(szTemp,PremiumItemDoc[i][1]); 		
				wsprintf(szTemp2,"\r");
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;
				break;
			}
		}
	}
	//haGoon �籸�� ������
	if((sInfo.CODE & sinITEM_MASK2) == sinSE1){
		for(int i=0;i<MAX_SEEL_COUNT;i++){  // ����� - ���̿��� �� �߰� (3���� -> 4����) ������ ���� ���
			if(pItem->CODE==sReconItem[i].dwCODE){
				lstrcpy(szTemp,sinAbilityName[28]); 		
				wsprintf(szTemp2,"%d-%d\r",sReconItem[i].iLevel[0],sReconItem[i].iLevel[1]);
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;
			}
		}
	}

	//haGoon ������ ������ 
	if((sInfo.CODE & sinITEM_MASK2) == sinBC1){
		for( i = 0; i < 16 ; i++){ 
			if((pItem->CODE&sinITEM_MASK3)== dwCastlItemCODE[i]){
				//������ ����
				if(i==5 || i==6 || i==7){
					lstrcpy(szTemp,CastlItemInfo[5]); 		
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;

					lstrcpy(szTemp,CastlItemInfo2[5]); 		
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
		
					wsprintf(szTemp,AttributeTower[3],60);
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;

					lstrcpy(szTemp,AttributeTower[i-5]); 		
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
					RedLine[1]=ItemInfoCol;
					
					break;
				}
				else if(i > 7){
					lstrcpy(szTemp,CastlItemInfo[6]); 		
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;

					lstrcpy(szTemp,CastlItemInfo2[6]);
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;

					wsprintf(szTemp,AttributeTower[3],60);
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;

					lstrcpy(szTemp,CharClassTarget[i-8]);
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;
					RedLine[1]=ItemInfoCol;

					break;
				}
				else{
					lstrcpy(szTemp,CastlItemInfo[i]); 		
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;

					lstrcpy(szTemp,CastlItemInfo2[i]); 		
					wsprintf(szTemp2,"\r");
					lstrcat(szInfoBuff,szTemp);
					lstrcat(szInfoBuff2,szTemp2);
					ItemInfoCol++;

					if(i<3){
						 		
						wsprintf(szTemp,AttributeTower[3],30);
						wsprintf(szTemp2,"\r");
						lstrcat(szInfoBuff,szTemp);
						lstrcat(szInfoBuff2,szTemp2);
						ItemInfoCol++;
					}
					break;
				}
			}
		}

	}

	// ����� - �ν��� ������(�����, ���, �ٷ�)
	if((sInfo.CODE & sinITEM_MASK2) == sinBC1)
	{
		for( i = 0; i < 9 ; i++) // ���� �ν��� �������� 9������ �߰��Ǿ���.
		{ 
			if((pItem->CODE&sinITEM_MASK3)== dwBoosterItemCode[i])
			{
				int m,n=0; 
				if(i>=0 && i<=2) m=0; // ����� 
				if(i>=3 && i<=5) m=1; // ���
				if(i>=6 && i<=8) m=2; // �ٷ�

				//������ ����
				lstrcpy(szTemp,BoosterItemInfo[m]); 		
				wsprintf(szTemp2,"\r");
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;

				lstrcpy(szTemp,BoosterItemInfo2[m]); 		
				wsprintf(szTemp2,"\r");
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;

				if(i==0 || i==3 || i==6) n=0; // 1�ð�
				if(i==1 || i==4 || i==7) n=1; // 3�ð�
				if(i==2 || i==5 || i==8) n=2; // 1��
				wsprintf(szTemp,AttributeTower[3],BoosterItem_UseTime[n]);
				wsprintf(szTemp2,"\r");
				lstrcat(szInfoBuff,szTemp);
				lstrcat(szInfoBuff2,szTemp2);
				ItemInfoCol++;

				break;
			}	

		}

	}

	if(sInfo.Strength){
		lstrcpy(szTemp,sinAbilityName[29]);
		wsprintf(szTemp2,"%d\r",sInfo.Strength);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		RequireLine[1] = ItemInfoCol;
		if(sInfo.Strength >sinChar->Strength){
			sRequire.rStrength = 1;
			RedLine[1]=ItemInfoCol;

		}

	}

	if(sInfo.Spirit && (sInfo.CODE & sinITEM_MASK2) != sinFO1){
		lstrcpy(szTemp,sinAbilityName[30]);
		wsprintf(szTemp2,"%d\r",sInfo.Spirit);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		RequireLine[2] = ItemInfoCol;
		if(sInfo.Spirit > sinChar->Spirit){
			sRequire.rSpirit = 1;
			RedLine[2]=ItemInfoCol;
			
		}

	}
	
	if(sInfo.Talent){
		lstrcpy(szTemp,sinAbilityName[31]);
		wsprintf(szTemp2,"%d\r",sInfo.Talent);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		RequireLine[3] = ItemInfoCol;
		if(sInfo.Talent > sinChar->Talent ){
			sRequire.rTalent = 1;
			RedLine[3]=ItemInfoCol;

		}
	}

	if(sInfo.Dexterity){
		lstrcpy(szTemp,sinAbilityName[32]);
		wsprintf(szTemp2,"%d\r",sInfo.Dexterity);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		RequireLine[4] = ItemInfoCol;
		if(sInfo.Dexterity > sinChar->Dexterity){
			sRequire.rDexterity =1;
			RedLine[4]=ItemInfoCol;

		}

	}
	if(sInfo.Health){
		lstrcpy(szTemp,sinAbilityName[33]);
		wsprintf(szTemp2,"%d\r",sInfo.Health);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		RequireLine[5] = ItemInfoCol;
		if(sInfo.Health > sinChar->Health){
			sRequire.rHealth = 1;
			RedLine[5]=ItemInfoCol;
		}

	}

	ShowItemInfo2(pItem , Flag , Index);
	return TRUE;
}

int cITEM::ShowItemInfo2(sITEM *pItem ,int Flag,int Index)
{
	int   BlockRate = 0;
	int   sinSpeed  = 0; 
	int   sinAbsorb = 0;
	int   sinLeftSpot = 0;
	int   sinRightSpot= 0;
	int sinMagic_Mastery;

	int   sinRegen = 0;

	char	szTemp[64];
	char    szTemp2[64];

	sRequire.rDexterity = 0;  //�䱸ġ �÷� �ʱ�ȭ 
	sRequire.rHealth    = 0;
	sRequire.rLevel     = 0;
	sRequire.rSpirit    = 0;
	sRequire.rStrength  = 0;
	sRequire.rTalent    = 0;
	
	memset(&szTemp,0,sizeof(szTemp));
	memset(&szTemp2,0,sizeof(szTemp2));

	
	//////////////////////////Ưȭ ������ 
	if(sInfo.JobCodeMask && (sInfo.CODE & sinITEM_MASK2) != sinFO1){ //ĳ���� Ưȭ �������̸�  
		SearchSpecialItemJob(sInfo.JobCodeMask); //��밡�� ĳ���� Name�� �˾ƿ´� (���� �񱳰� �߾ȵ�)
		
	}

	if(sInfo.JobItem.Add_Attack_Speed){ 
		lstrcpy(szTemp,sinSpecialName[0]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Attack_Speed);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_Critical_Hit){ 
		lstrcpy(szTemp,sinSpecialName[1]);
		wsprintf(szTemp2,"%d%s\r",sInfo.JobItem.Add_Critical_Hit,"%");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_Defence){ 
		lstrcpy(szTemp,sinSpecialName[2]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Defence);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_fAbsorb){ 
		sinAbsorb = (int)(sInfo.JobItem.Add_fAbsorb*10.001f);
		sinRightSpot =  sinAbsorb %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinAbsorb - sinRightSpot)/10;
		lstrcpy(szTemp,sinSpecialName[3]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot,sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_fBlock_Rating ){ 
		BlockRate = (int)(sInfo.JobItem.Add_fBlock_Rating);
		lstrcpy(szTemp,sinSpecialName[4]);
		wsprintf(szTemp2,"%d%s\r",BlockRate,"%");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	
	if(sInfo.JobItem.Add_fMagic_Mastery){ 
		sinMagic_Mastery = (int)(sInfo.JobItem.Add_fMagic_Mastery);
		lstrcpy(szTemp,sinSpecialName[5]);
		wsprintf(szTemp2,"%d\r",sinMagic_Mastery);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(sInfo.JobItem.Add_fSpeed){ 
		sinSpeed  = (int)(sInfo.JobItem.Add_fSpeed *10.001f);
		sinRightSpot =  sinSpeed %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinSpeed - sinRightSpot)/10;
		lstrcpy(szTemp,sinSpecialName[6]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot,sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(sInfo.JobItem.Add_Resistance[0]){
		lstrcpy(szTemp,sinSpecialName[7]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Resistance[0]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
	}
	if(sInfo.JobItem.Add_Resistance[1]){
		lstrcpy(szTemp,sinSpecialName[8]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Resistance[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
	}

	if(sInfo.JobItem.Add_Resistance[2]){
		lstrcpy(szTemp,sinSpecialName[9]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Resistance[2]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_Resistance[3]){
		lstrcpy(szTemp,sinSpecialName[10]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Resistance[3]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_Resistance[4]){
		lstrcpy(szTemp,sinSpecialName[11]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Resistance[4]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_Resistance[5]){
		lstrcpy(szTemp,sinSpecialName[12]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Resistance[5]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_Resistance[6]){
		lstrcpy(szTemp,sinSpecialName[13]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Resistance[6]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Add_Resistance[7]){
		lstrcpy(szTemp,sinSpecialName[14]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Resistance[7]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Lev_Damage[1]){
		lstrcpy(szTemp,sinSpecialName[15]);
		wsprintf(szTemp2,"LV/%d\r",sInfo.JobItem.Lev_Damage[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(sInfo.JobItem.Lev_Attack_Rating){
		lstrcpy(szTemp,sinSpecialName[16]);
		wsprintf(szTemp2,"LV/%d\r",sInfo.JobItem.Lev_Attack_Rating);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(sInfo.JobItem.Add_Shooting_Range){
		lstrcpy(szTemp,sinSpecialName[17]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Add_Shooting_Range);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(sInfo.JobItem.Lev_Attack_Resistance[0]){
		lstrcpy(szTemp,sinSpecialName[18]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Lev_Attack_Resistance[0]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Lev_Attack_Resistance[1]){
		lstrcpy(szTemp,sinSpecialName[19]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Lev_Attack_Resistance[1]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Lev_Attack_Resistance[2]){
		lstrcpy(szTemp,sinSpecialName[20]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Lev_Attack_Resistance[2]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Lev_Attack_Resistance[3]){
		lstrcpy(szTemp,sinSpecialName[21]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Lev_Attack_Resistance[3]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Lev_Attack_Resistance[4]){
		wsprintf(szTemp,sinSpecialName[22]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Lev_Attack_Resistance[4]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(sInfo.JobItem.Lev_Attack_Resistance[5]){
		lstrcpy(szTemp,sinSpecialName[23]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Lev_Attack_Resistance[5]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;


	}
	if(sInfo.JobItem.Lev_Attack_Resistance[6]){
		lstrcpy(szTemp,sinSpecialName[24]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Lev_Attack_Resistance[6]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Lev_Attack_Resistance[7]){
		lstrcpy(szTemp,sinSpecialName[25]);
		wsprintf(szTemp2,"%d\r",sInfo.JobItem.Lev_Attack_Resistance[7]);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Lev_Life){
		lstrcpy(szTemp,sinSpecialName[26]);
		wsprintf(szTemp2,"LV/%d\r",sInfo.JobItem.Lev_Life);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Lev_Mana){
		lstrcpy(szTemp,sinSpecialName[27]);
		wsprintf(szTemp2,"LV/%d\r",sInfo.JobItem.Lev_Mana);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	int sinPer_Regen;
	if(sInfo.JobItem.Per_Life_Regen && (sInfo.CODE & sinITEM_MASK2) != sinFO1){
		sinPer_Regen  = (int)(sInfo.JobItem.Per_Life_Regen *10.001f);
		sinRightSpot =  sinPer_Regen %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinPer_Regen - sinRightSpot)/10;

		lstrcpy(szTemp,sinSpecialName[28]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot , sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	if(sInfo.JobItem.Per_Mana_Regen && (sInfo.CODE & sinITEM_MASK2) != sinFO1){
		sinPer_Regen  = (int)(sInfo.JobItem.Per_Mana_Regen *10.001f);
		sinRightSpot =  sinPer_Regen %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinPer_Regen - sinRightSpot)/10;
		lstrcpy(szTemp,sinSpecialName[29]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot , sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}

	if(sInfo.JobItem.Per_Stamina_Regen && (sInfo.CODE & sinITEM_MASK2) != sinFO1){
		sinPer_Regen  = (int)(sInfo.JobItem.Per_Stamina_Regen *10.001f);
		sinRightSpot =  sinPer_Regen %10; //�Ҽ��� ���ڸ���
		sinLeftSpot =  (sinPer_Regen - sinRightSpot)/10;
		lstrcpy(szTemp,sinSpecialName[30]);
		wsprintf(szTemp2,"%d.%d\r",sinLeftSpot , sinRightSpot);
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}
	
	char szTemp7[64];
	memset(szTemp7,0,sizeof(szTemp7)); 
	if(cShop.OpenFlag){  //������ ���������� ������ ǥ���Ѵ�   
		lstrcpy(szTemp,"\r");
		lstrcpy(szTemp2,"\r");
		lstrcat(szInfoBuff,szTemp);
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
	
		if(sInfo.Price && pItem->CODE != (sinGF1|sin01) && pItem->CODE != (sinGF1|sin02)){ //���������� ������ ǥ�������ʴ´�       
			if(Flag == 2){ //�κ��丮 
				sinItemPrice = 	cInvenTory.GetInvenItemPrice(pItem);
				pItem->SellPrice = sinItemPrice.SellPrice; //�ȸ� ������ �����Ѵ� 
				lstrcpy(szTemp,sinSpecialName[31]);
//				wsprintf(szTemp2,"%d\r",pItem->SellPrice);
				NumLineComa(pItem->SellPrice, szTemp7);
				lstrcpy(szTemp2,szTemp7);
				lstrcat(szTemp2,"\r");

			}
			if(Flag == 1){ //���� 
				lstrcpy(szTemp,sinSpecialName[32]);
				//--------------------------------------------------------------------------//
				#ifdef HASIEGE_MODE
					//<ha>������ �������� ���������� ����ǥ��
					NumLineComa(cShop.haShopItemPrice(sInfo.Price), szTemp7);
				#else
					NumLineComa(sInfo.Price, szTemp7);
				#endif
				//---------------------------------------------------------------------------//
				
				lstrcpy(szTemp2,szTemp7);
				lstrcat(szTemp2,"\r");

				//wsprintf(szTemp2,"%d\r",sInfo.Price);
				

			}
				
			lstrcat(szInfoBuff,szTemp);
			lstrcat(szInfoBuff2,szTemp2);
			ItemInfoCol++;
		}

	}
	MyShopItemPriceLine = 0;
	if(cMyShop.OpenFlag || cCharShop.OpenFlag){  
		if(Flag == 3){ //���λ��� 
			lstrcpy(szTemp,"\r");
			lstrcpy(szTemp2,"\r");
			lstrcat(szInfoBuff,szTemp);
			lstrcat(szInfoBuff2,szTemp2);
			ItemInfoCol++;

			lstrcpy(szTemp,MyShopItemSell5);
			NumLineComa(MyShopItemSellMoney2, szTemp7);
			lstrcpy(szTemp2,szTemp7);
			lstrcat(szTemp2,"    \r");

			//wsprintf(szTemp2,"%d\r",MyShopItemSellMoney2);
			lstrcat(szInfoBuff,szTemp);
			lstrcat(szInfoBuff2,szTemp2);
			ItemInfoCol++;
			MyShopItemPriceLine = ItemInfoCol;

		}
	}
	if(pItem->CODE == (sinGF1|sin01) ){        
		lstrcat(szInfoBuff,"\r");
		lstrcat(szInfoBuff2,"\r"); //��ĭ �ǳʶ�
		ItemInfoCol++;

		wsprintf(szTemp,sinGold,sInfo.Price); 
		lstrcat(szTemp,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
	}

	//������ �������̳� ����������� ǥ���Ѵ� 
	if(pItem->sItemInfo.SpecialItemFlag[0] == CHECK_COPY_ITEM){
		lstrcat(szInfoBuff,"\r");
		lstrcat(szInfoBuff2,"\r"); //��ĭ �ǳʶ�
		ItemInfoCol++;

		lstrcpy(szTemp,sinCopyItem5); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		RedLine[6] = ItemInfoCol;

	}

	if(pItem->sItemInfo.SpecialItemFlag[0] == CHECK_GIVE_ITEM ){
		lstrcat(szInfoBuff,"\r");
		lstrcat(szInfoBuff2,"\r"); //��ĭ �ǳʶ�
		ItemInfoCol++;

		lstrcpy(szTemp,sinGiveItem5); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		RedLine[7] = ItemInfoCol;

	}
	////////��������� ǥ���Ѵ�
	if ( cItem.GetItemLimitTime( pItem )==FALSE ) {
	//if(pItem->LimitTimeFlag){
		lstrcat(szInfoBuff,"\r");
		lstrcat(szInfoBuff2,"\r"); //��ĭ �ǳʶ�
		ItemInfoCol++;

		lstrcpy(szTemp,sinItemLimitTimeOverMsg); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;
		RedLine[8] = ItemInfoCol;

	}
	///////�Ǹ������� �˷��ش�
	if(MyShopItemIndex[Index]){ 
		if(Flag == 2){
			lstrcat(szInfoBuff,"\r"); 
			lstrcat(szInfoBuff2,"\r"); //��ĭ �ǳʶ�
			ItemInfoCol++;

			wsprintf(szTemp,"%s",NowMyShopSell); 
			lstrcat(szInfoBuff,szTemp);
			lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
			lstrcat(szInfoBuff2,szTemp2);
			ItemInfoCol++;

			RedLine[9] = ItemInfoCol;
		}
	}

	if(smConfig.DebugMode && VRKeyBuff[VK_CONTROL] ){ //������ �϶��� �ø����� �����ش� 
		
		wsprintf(szTemp,"%d\r",pItem->sItemInfo.ItemHeader.dwChkSum); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

		wsprintf(szTemp,"%d\r",pItem->sItemInfo.ItemHeader.Head); 
		lstrcat(szInfoBuff,szTemp);
		lstrcpy(szTemp2,"\r"); //��ĭ �ǳʶ� 
		lstrcat(szInfoBuff2,szTemp2);
		ItemInfoCol++;

	}


	GetInfoBoxSize(pItem , ItemInfoCol);

	sinLineCount = ItemInfoCol;

	return TRUE;

}

//�ڽ��� ũ�⸦ ���Ѵ� 
int cITEM::GetInfoBoxSize(sITEM *pItem , int Col)
{
	int ty , tx;

	ItemBoxSize.x = 10;  //���� ���� ������� 256���� �����Ѵ� (��? �����̴ϱ� ��������)
	ItemBoxSize.y = Col+1; //���� ����ŭ ����� ��´� 
	
	ItemBoxPosi.x = (pItem->x+(pItem->w/2))-((ItemBoxSize.x*16)/2);
	ItemBoxPosi.y = pItem->y - (ItemBoxSize.y*16); //������ �����ڽ��� ���� ��ġ 


	ty = ItemBoxPosi.y + (ItemBoxSize.y*16);
	tx = ItemBoxPosi.x + (ItemBoxSize.x*16);

	/////////////ȭ������� ������ �ʰ� ��ġ ���� 
	if(ItemBoxPosi.y < 0)
		ItemBoxPosi.y = 0;
	if(ItemBoxPosi.x < 0)
		ItemBoxPosi.x = 0;

	if(ty > 600)
		ItemBoxPosi.y -= (ty - 600);
	if(tx > 800)
		ItemBoxPosi.x -= (tx - 800);

	return TRUE;
}

int cITEM::DrawItemText() //������ ���� �ؽ�Ʈ 
{

	if(!sinShowItemInfoFlag)return FALSE;
	if(sinShowItemInfoFlag == 1)dsDrawOffsetArray = dsARRAY_TOP;
	else dsDrawOffsetArray = dsARRAY_BOTTOM;
	HDC	hdc;
	//char *Test ="�ڻ󿭸�������������������";

	int i , Count=0;
	int len,len2;

	int TempLen = 0;
	int TempLen2 = 0;

	int Templen = 0; //�ӽ÷� �ٰ����� ���ؼ� �־��ش� 
	int TemplenNum = 0 ; 

	int ImsiLen = 0;
	

	int Textlen = 0;
	int Textlen2 = 0;

	int SetTextXposi=0;
	int SetTextXposi2=0;

	
	int CutLen = 0;
	int CutLen2 = 0;

	int j;


	char *pItemInfo[40];
	char *pItemInfo2[40];


	/////////////��ġ�� �÷� 
	int  BlodCheckFlag =0;

	
	renderDevice.lpDDSBack->GetDC(&hdc);
	SelectObject( hdc, sinFont);
    SetBkMode( hdc, TRANSPARENT );


	len = lstrlen(szInfoBuff);
	len2 = lstrlen(szInfoBuff2);


/*
	SetTextColor( hdc, RGB(255,180,100) );
	dsTextLineOut(hdc,SetTextXposi,ItemBoxPosi.y, "testtest" , 8 );

	SelectObject( hdc, sinFont);
	SetBkMode( hdc, TRANSPARENT );

	SetTextColor( hdc, RGB(255,180,100) );
	dsTextLineOut(hdc,SetTextXposi,ItemBoxPosi.y+32, "testtest" , 8 );


    lpDDSBack->ReleaseDC( hdc );
	return TRUE;
*/

	char szInfoBuffBack[5000];
	char szInfoBuff2Back[5000];
	char szAgingNum[32];

	int  TempLen3 = 0; //���λ������� �߲ٳ��°��� �����

	lstrcpy( szInfoBuffBack , szInfoBuff ); 
	lstrcpy( szInfoBuff2Back , szInfoBuff2 );

	for( i = 0 ; i < len ; i++){
		for( j=0 ; j < len2 ; j++){
			if(szInfoBuffBack[i] == '\r'){
				if(szInfoBuff2Back[j] == '\r'){
					pItemInfo[Count] = &szInfoBuffBack[TempLen];     
					pItemInfo2[Count] = &szInfoBuff2Back[TempLen2]; 

					szInfoBuffBack[i] = 0;
					szInfoBuff2Back[j] = 0;

					TempLen = i+1;
					TempLen2 = j+1;
				
					Textlen = lstrlen(pItemInfo[Count]);        
					Textlen2 = lstrlen(pItemInfo2[Count]);
					
					SetTextXposi = (ItemBoxPosi.x + (158/2)) - (Textlen*6);  
					SetTextXposi2 = (ItemBoxPosi.x + (158/2));

					//��ġ����

					SetTextXposi += 20;
					SetTextXposi2 += 17;

					//Ưȭ                          //�̸�
					if(*pItemInfo2[Count] == ' ' || Textlen2 < 1){
						SetTextXposi  = (ItemBoxPosi.x + (158/2)) - (Textlen*3);
					}

#ifdef	_LANGUAGE_VEITNAM
					char	test[1024];
  					ZeroMemory(test,sizeof(char)*1024);
					strcat(test,pItemInfo[Count]);
					strcat(test,pItemInfo2[Count]);

					SIZE sizecheck;
					GetTextExtentPoint32(hdc,test,lstrlen(test),&sizecheck);
					SetTextXposi = ItemBoxPosi.x+(((ItemBoxSize.x*16)-sizecheck.cx)/2);
#endif
#ifdef	_LANGUAGE_THAI
					char	test[1024];
  					ZeroMemory(test,sizeof(char)*1024);
					strcat(test,pItemInfo[Count]);
					strcat(test,pItemInfo2[Count]);

					SIZE sizecheck;
					GetTextExtentPoint32(hdc,test,lstrlen(test),&sizecheck);
					SetTextXposi = ItemBoxPosi.x+(((ItemBoxSize.x*16)-sizecheck.cx)/2);
#endif
#ifdef _LANGUAGE_BRAZIL
					char	test[1024];
  					ZeroMemory(test,sizeof(char)*1024);
					strcat(test,pItemInfo[Count]);
					strcat(test,pItemInfo2[Count]);

					SIZE sizecheck;
					GetTextExtentPoint32(hdc,test,lstrlen(test),&sizecheck);
					SetTextXposi = ItemBoxPosi.x+(((ItemBoxSize.x*16)-sizecheck.cx)/2);
#endif
//�Ƹ���Ƽ��
#ifdef _LANGUAGE_ARGENTINA
					char	test[1024];
  					ZeroMemory(test,sizeof(char)*1024);
					strcat(test,pItemInfo[Count]);
					strcat(test,pItemInfo2[Count]);

					SIZE sizecheck;
					GetTextExtentPoint32(hdc,test,lstrlen(test),&sizecheck);
					SetTextXposi = ItemBoxPosi.x+(((ItemBoxSize.x*16)-sizecheck.cx)/2);
#endif
//�߱�
#ifdef	_LANGUAGE_CHINESE
					char	test[1024];
  					ZeroMemory(test,sizeof(char)*1024);
					strcat(test,pItemInfo[Count]);
					strcat(test,pItemInfo2[Count]);

					SIZE sizecheck;
					GetTextExtentPoint32(hdc,test,lstrlen(test),&sizecheck);
					SetTextXposi = ItemBoxPosi.x+(((ItemBoxSize.x*16)-sizecheck.cx)/2);
#endif
#ifdef	_LANGUAGE_ENGLISH
					char	test[1024];
  					ZeroMemory(test,sizeof(char)*1024);
					strcat(test,pItemInfo[Count]);
					strcat(test,pItemInfo2[Count]);

					SIZE sizecheck;
					GetTextExtentPoint32(hdc,test,lstrlen(test),&sizecheck);
					SetTextXposi = ItemBoxPosi.x+(((ItemBoxSize.x*16)-sizecheck.cx)/2);
#endif

					SetTextColor( hdc, RGB(255,255,255) );
					
					if(Count+1 == 1){ 
						if(UniFlag)
							SetTextColor( hdc, RGB(128,255,128) );
						else{
							SetTextColor( hdc, RGB(222,231,255) );
							if(sinItemKindFlag){
								switch(sinItemKindFlag){
									case ITEM_KIND_CRAFT:
										//SetTextColor( hdc, RGB(132,240,254) );
										SetTextColor( hdc, RGB(150,255,255) );
									break;
									case ITEM_KIND_AGING:
										SetTextColor( hdc, RGB(255,250,0) ); //����¡ ������ 
									break;
									case ITEM_KIND_QUEST_WEAPON:
										SetTextColor( hdc, RGB(132,50,254) ); //����Ʈ������
									break;
									case 100: //��� ������
										SetTextColor( hdc, RGB(255,100,29) ); //����Ʈ������
									break;

								}

							}
							
						}
						
						SelectObject( hdc, sinBoldFont);
						SetBkMode( hdc, TRANSPARENT );

						dsTextLineOut(hdc,SetTextXposi-3,ItemBoxPosi.y+27+((Count-1)*14), pItemInfo[Count] , Textlen );
						BlodCheckFlag = 1;

					}
					if(AgingGageFlag){
						SetTextColor( hdc, RGB(0,0,0) ); //����¡ ������ 
						SelectObject( hdc, sinFont);
						SetBkMode( hdc, TRANSPARENT );
						wsprintf(szAgingNum,"+%d",AgingLevel4);
						if(AgingLevel4 <10)
							dsTextLineOut(hdc,ItemBoxPosi.x+72,ItemBoxPosi.y+34, szAgingNum , lstrlen(szAgingNum));
						else
							dsTextLineOut(hdc,ItemBoxPosi.x+69,ItemBoxPosi.y+34, szAgingNum , lstrlen(szAgingNum));

					}
					SetTextColor( hdc, RGB(255,255,255) ); //�⺻��  
					for(j = 0 ; j < 10 ; j++){
						if(Count+1 == MixItemLine[j])
							SetTextColor( hdc, RGB(110,165,250) ); //�ͽ��ľ����� 
						if(AgingGageFlag){
							if(Count+1 ==  AgingItemLine[j])
								SetTextColor( hdc, RGB(119,200,254) );
								//SetTextColor( hdc, RGB(110,165,250) ); //�ͽ��ľ����� 
								//SetTextColor( hdc, RGB(255,220,100) ); //����¡ ������1
						}

					}

					if(SpecialItemLine){ //Ưȭ�������϶�
						if(SpecialItemLine <= Count+2){
							SetTextColor( hdc, RGB(164,199,41) ); //Ưȭ ������ 

						}
						if(SpecialItemLine == Count+2 || (SpecialItemLine +(CountSpecialName-1)) == Count+2)
							SetTextColor( hdc, RGB(255,220,0) ); //Ưȭ ���� 

					}
					for( j = 0 ; j < 10 ; j ++){
						if(Count+1 == RequireLine[j])
							SetTextColor( hdc, RGB(255,180,100) );

						if(Count+1 == RedLine[j])
							SetTextColor( hdc, RGB(255,0,0) );

					}

					if(cShop.OpenFlag){  //������ ���������� ������ ǥ���Ѵ� 			
						if(Count == sinLineCount-1)
							SetTextColor( hdc, RGB(247,243,193) ); //���� 
					}
					
					SelectObject( hdc, sinFont);
					SetBkMode( hdc, TRANSPARENT );

					if( Count+1 == QuestItemLine){
						SelectObject( hdc, sinBoldFont);
						SetBkMode( hdc, TRANSPARENT );
						SetTextColor( hdc, RGB(125,180,175) ); //����Ʈ������ 

					}//

					if( Count+1 == MyShopItemPriceLine){ 
						SelectObject( hdc, sinFont);
						SetBkMode( hdc, TRANSPARENT );
						SetTextColor( hdc, RGB(65,177,255) ); //������ �Ǹ�

					}
						
#ifdef	_LANGUAGE_VEITNAM
					if(!BlodCheckFlag){  
						dsTextLineOut(hdc,SetTextXposi-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), test , Textlen+Textlen2 );
					}
#else
#ifdef	_LANGUAGE_THAI
					if(!BlodCheckFlag){  
						dsTextLineOut(hdc,SetTextXposi-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), test , Textlen+Textlen2 );
					}
#else
#ifdef _LANGUAGE_BRAZIL
					if(!BlodCheckFlag){  
						dsTextLineOut(hdc,SetTextXposi-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), test , Textlen+Textlen2 );
					}
#else
//�Ƹ���Ƽ��
#ifdef _LANGUAGE_ARGENTINA
					if(!BlodCheckFlag){  
						dsTextLineOut(hdc,SetTextXposi-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), test , Textlen+Textlen2 );
					}
#else
//�߱�
#ifdef	_LANGUAGE_CHINESE
					if(!BlodCheckFlag){  
						dsTextLineOut(hdc,SetTextXposi-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), test , Textlen+Textlen2 );
					}
#else
#ifdef	_LANGUAGE_ENGLISH
					if(!BlodCheckFlag){  
						dsTextLineOut(hdc,SetTextXposi-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), test , Textlen+Textlen2 );
					}
#else
					if(!BlodCheckFlag)
					{  
						//if(Count==3) SetTextXposi2=50;
						dsTextLineOut(hdc,SetTextXposi-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), pItemInfo[Count] , Textlen );
						dsTextLineOut(hdc,SetTextXposi2-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), pItemInfo2[Count] , Textlen2 );
						dsTextLineOut(hdc,SetTextXposi2+1-TempLen3,ItemBoxPosi.y+28+((Count-1)*14), pItemInfo2[Count] , Textlen2 );
					}
#endif
#endif
#endif
#endif
#endif
#endif	
					BlodCheckFlag = 0;

					Count++;
					break;
				}
			}
	
		}
	}

//	len = lstrlen(Test); 
//	dsTextLineOut(hdc,ItemBoxPosi.x,ItemBoxPosi.y,Test,len);

	renderDevice.lpDDSBack->ReleaseDC(hdc);
	return TRUE;

}

//Ưȭ ������ ã�´� 
int cITEM::SearchSpecialItemJob(DWORD SpecialJob_CODE) //Ưȭ ĳ���� ���� ������  
{

//  WS201 WS202 WS203
	int cnt;

	char	szTemp[64];
	char    szTemp2[64];
	CountSpecialName = 0;

	cnt = 0;
	while(1) {
		if ( JobDataBase[cnt].JobBitCode ==0 )break;
		if ( JobDataBase[cnt].JobBitCode & SpecialJob_CODE ) {
			wsprintf(szTemp,SpecialName3,JobDataBase[cnt].szName2);
			lstrcpy(szTemp2,"  \r");
			lstrcat(szInfoBuff,szTemp);
			lstrcat(szInfoBuff2,szTemp2);
			ItemInfoCol++;
			SpecialItemLine = ItemInfoCol+1;
			CountSpecialName++;
			SpecialItemLine -= (CountSpecialName-1);

		}
		cnt++;
	}
	return FALSE;
}

int ItemTableCheckDelayTime = 0;
/////////������ ���̺� ������ ���´� 
int cITEM::CheckItemTable()
{
	ItemTableCheckDelayTime++;
	if(ItemTableCheckDelayTime < 70*10)return FALSE;
	ItemTableCheckDelayTime = 0;

	
	DWORD CheckSumItemDataADD = 0;
	
	for(int j=0 ;  j <INVENTORY_MAX_POS  ; j++)
	{
		if(sInven[j].Position)
		{
			CheckSumItemDataADD += sInven[j].Position * j;
		}
	}

	for(int i=0 ;  i < MAX_ITEM  ; i++)
	{   
		if(sItem[i].CODE)
		{	
			CheckSumItemDataADD += sItem[i].CODE * i;
			CheckSumItemDataADD += sItem[i].h * i;
			CheckSumItemDataADD += sItem[i].w * i;
			CheckSumItemDataADD += sItem[i].Class * i;
			CheckSumItemDataADD += sItem[i].ItemPosition * i;
		}
	}
	const DWORD CheckSumItemData = 3977515816;


	//������ �߰��� üũ�� ������  //kyle

	//DRZ_EDIT
	/*
	if( CheckSumItemData != CheckSumItemDataADD){              
		SendSetHackUser(101); //��ŷ�� �Ϸ����ߴ� ���� ������ ��� TRUE ���� ����  
//		SendSetHackUser2(4100,88); //��ŷ�� ������ �Ű��Ѵ� 
//		CheckSumItemData = CheckSumItemDataADD; //��ġ�� ���� ~~~

	}
	*/
	return TRUE; 
}

//////// ����Ⱓ�� �ִ� �������� �Ⱓ�� ���ؿ´� 
int cITEM::GetItemLimitTime(sITEM *pItem)
{
	/* ������� ���ش�
	/////////���� �ð��� ���Ѵ� ��а�
	DWORD Time=0;
	Time = 60*60*24*7;
	if((pItem->sItemInfo.CODE & sinITEM_MASK2)==sinSP1 || (pItem->sItemInfo.CODE & sinITEM_MASK2)==sinCH1)
	{
		if( (pItem->sItemInfo.CODE & sinITEM_MASK3)==sin15 ) // ����� - ���� ��ƿ��� �̺�Ʈ
			return TRUE;

		if(sinItemTime > (pItem->sItemInfo.dwCreateTime+Time) )
		{
			//pItem->LimitTimeFlag = 1;
			return FALSE;
		}
	}
	*/

	return TRUE;
}
/*
//�����̾� ����ȭ ������
void cITEM::SetItemInfo(char *Buff)
{	
	int len = lstrlen(Buff);
	int cnt=0,j=0;
	for(int i=0;i<len;i++,j++){
		if(Buff[i]!='/')
			//PremiumItemInfo.PremiumItemInfo[cnt][j] = Buff[i];
		else
			cnt++,j=0;
	}
}
*/